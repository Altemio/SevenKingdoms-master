# -*- ck2.events -*-

namespace = DragonDuel

#####################
# Duel Engine Mk II #
#####################
# Galle (Gregory Hayes)
# May 28 2012
#####################
# Updated/extended by 'jordarkelf'
# Updated for CK2+ by Dallan
#####################
# Flow:
# (0 or 1 -> 2-> 3 -> 4 -> 5 -> 6 -> 7 -> 110/306 OR 105/309 OR ( 201/311 -> END)
# 110 (wounding blow: automatic wound, chance of maiming of already wounded, opponent can flee):
# -> ( 111 -> 1 ) OR (107 -> ( 108 -> END) OR (109 -> END) )
# 105 (subduing blow: higher chance for yielding, chance of wound, chance of incapable if already wounded):
# -> 106 -> (107 -> ( 108 -> END) OR (109 -> 203 -> END) ) OR 112 -> 1
# 306: -> 305 -> 313 -> END
# 309: -> 310 -> END
##########################
# MAIN LOOP:
# DragonDuel.0  Judge: Duel Start
# DragonDuel.1	Judge: Round Start
# DragonDuel.2	Duelist One: Round
# DragonDuel.3	Duelist Two: Round
# DragonDuel.4	Judge: Round Resolution
# DragonDuel.5	Winner: Exploits Hole in Defense
# DragonDuel.6	Loser: Is Hit
# DragonDuel.7	Judge: Determine Outcome
######################
# YIELD OUTCOMES: (105 ->
######################
# DragonDuel.105	Winner: Opponent At Your Mercy!
# DragonDuel.106	Loser: Subdued! Yield Y/N?
# DragonDuel.107	Winner: Opponent Yields! Accept Y/N?
# DragonDuel.108	Loser: Opponent Accepts Your Yield!
# DragonDuel.109	Loser: Opponent Refuses Your Yield!
######################
# WOUND OUTCOMES
######################
# DragonDuel.110	Loser: You Roll Aside, But Are Wounded!
# DragonDuel.111	Winner: Your Opponent Rolls Aside, But Is Wounded!
# DragonDuel.112	  Winner: You have wounded your opponent!
######################
# DEATH OUTCOMES
######################
# DragonDuel.201	Winner: The final blow!
# DragonDuel.202	Loser: Slain!
# DragonDuel.203	Winner: Opponent Slain!
######################
# SPECIAL FLAVOR - TOURNEY DELETED FOR THE DRAGON DUELS
######################
# DragonDuel.301	Duelist One: Round - Tourney
# DragonDuel.302	Duelist Two: Round - Tourney
# DragonDuel.303	Winner: Exploits Hole in Defense - Tourney
# DragonDuel.304	Loser: Is Hit - Tourney
# DragonDuel.305	Winner: Opponent Wounded - Tourney
# DragonDuel.306	Loser: Wounded - Tourney
# DragonDuel.309	Winner: Opponent Unhorsed - Tourney
# DragonDuel.310	Loser: Unhorsed - Tourney
# DragonDuel.313	  Loser: Wounded therefore Lose - Tourney
# DragonDuel.311	Winner: The final blow! - Tourney
# DragonDuel.312	Loser: Slain - Tourney
######################
# OUTPUT EVENTS
######################
# DragonDuel.901	Collects output from the duel engine.
# DragonDuel.902	Collects output from the duel engine - Tourney joust flavour
# DragonDuel.903	Error cleanup

# How to include a duel in an event chain:
# 1. Call an event for the first duelist, that gives them
#	a unique flag for the context of your duel.
# 2. From the first event, call an event for the second duelist,
#	giving THEM a unique flag for the context of your duel.
# 3. Put the following in the second event:
#	e_rebels = { holder_scope = { character_event = { id = DragonDuel.0 } } }
# 4a. In option A of event DragonDuel.901, in duel_engine_output_events.txt,
#	add a new if statement checking ROOT for either of your context flags.
#	 Remove all context flags from both ROOT and FROM and call the next
#	 event of your chain. For the next event, FROM will be the winner, and
#	 FROMFROM will be the loser.
# 4b. For tournament jousts, use DragonDuel.902 instead. It works the same
#	but has tournament flavour text.
#########################
# SPECIAL CONTEXT FLAGS
# Put these on a characters before the duel begins in order to
# alter the duel in specific ways.
# They do not need to be removed in your output block.
#########################
# flag_duel_friendly		This character is not trying to kill their opponent.
# flag_duel_to_the_death	This character intends to fight to their death. Overriden by flag_duel_friendly
# flag_duel_tourney			This duel is a joust in a tourney. Should be used with flag_duel_friendly or bizarre behavior will ensue.
#########################
# Images:
# GFX_evt_duel0: start/circle
# GFX_evt_duel1: attack
# GFX_evt_duel2: defend
# GFX_evt_duel3: wound
# GFX_evt_duel4: yield
# GFX_evt_duel5: death
#########################

character_event = { # DUEL START - This event sets up event targets and should only be called once.
	id = DragonDuel.0
	is_triggered_only = yes
	picture = GFX_evt_duel0
	desc = "AI_EVENT"

	# Nobody but the actual referee should ever get this
	trigger = { has_landed_title = e_rebels }

	option = {
		name = "AI_EVENT"

		# Try to cancel if something broke in the setup/selection
		if = { #FROMFROM is dead
			limit = {
				FROMFROM = { is_alive = no }
			}
			FROM = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		if = { #FROM is dead
			limit = {
				FROM = { is_alive = no }
			}
			FROMFROM = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		if = { #FROM selection failed (is judge/rebels)
			limit = {
				FROM = { has_landed_title = e_rebels }
			}
			FROMFROM = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		if = { #FROMFROM selection failed (is judge/rebels)
			limit = {
				FROMFROM = { has_landed_title = e_rebels }
			}
			FROM = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		if = { #FROM is jousting but FROMFROM is not
			limit = {
				NOT = { FROMFROM = { has_character_flag = flag_duel_tourney } }
				FROM = { has_character_flag = flag_duel_tourney }
			}
			FROMFROM = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		if = { #FROMFROM is jousting but FROM is not
			limit = {
				FROMFROM = { has_character_flag = flag_duel_tourney }
				NOT = { FROM = { has_character_flag = flag_duel_tourney } }
			}
			FROM = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		FROM = {
			hidden_tooltip = { set_variable = { which = duel_rounds value = 0 } }
			save_event_target_as = combatant_1
			set_stats_for_dragon_duel_combatant1 = yes
		}
		FROMFROM = {
			hidden_tooltip = { set_variable = { which = duel_rounds value = 0 } }
			save_event_target_as = combatant_2
			set_stats_for_dragon_duel_combatant2 = yes
		}
		# Normal duels
		event_target:combatant_2 = { character_event = { id = DragonDuel.2 } } #Round one, fight!
	}
}

character_event = { # ROUND START This event starts a new round of combat after resolving the previous one
	id = DragonDuel.1
	is_triggered_only = yes
	picture = GFX_evt_duel0
	desc = "AI_EVENT"

	# Nobody but the actual referee should ever get this
	trigger = { has_landed_title = e_rebels }

	option = {
		name = "AI_EVENT"
		# Try to cancel if something broke in the setup/selection
		if = { #combatant_2 is dead
			limit = {
				event_target:combatant_2 = { is_alive = no }
			}
			event_target:combatant_1 = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		if = { #combatant_1 is dead
			limit = {
				event_target:combatant_1 = { is_alive = no }
			}
			event_target:combatant_2 = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		if = { #combatant_1 selection failed (is judge/rebels)
			limit = {
				event_target:combatant_1 = { has_landed_title = e_rebels }
			}
			event_target:combatant_2 = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		if = { #combatant_2 selection failed (is judge/rebels)
			limit = {
				event_target:combatant_2 = { has_landed_title = e_rebels }
			}
			event_target:combatant_1 = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		if = { #combatant_1 is jousting but combatant_2 is not
			limit = {
				NOT = { event_target:combatant_2 = { has_character_flag = flag_duel_tourney } }
				event_target:combatant_1 = { has_character_flag = flag_duel_tourney }
			}
			event_target:combatant_2 = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		if = { #combatant_2 is jousting but combatant_1 is not
			limit = {
				event_target:combatant_2 = { has_character_flag = flag_duel_tourney }
				NOT = { event_target:combatant_1 = { has_character_flag = flag_duel_tourney } }
			}
			event_target:combatant_1 = { character_event = { id = DragonDuel.903 tooltip = "EVTTOOLTIP_DragonDuel_903" } } #cancel! Something broke.
		}
		clear_event_target = round_winner
		clear_event_target = round_loser
		clear_event_target = Dragon_A
		clear_event_target = Dragon_L
		clear_event_target = Dragon_Winner
		clear_event_target = Dragon_Loser
		# Normal duels
		event_target:combatant_2 = { character_event = { id = DragonDuel.2 } } #Round one, fight!
	}
}

# MAIN LOOP
# Different flavour text for three rounds, reused once
# Duelist One Round
character_event = {
	id = DragonDuel.2
	picture = GFX_evt_duel0
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes
	hide_from = yes
	show_from_from = yes

	desc = {
		text = "EVTDESC_DragonDuel_2"
		trigger = {
			OR = {
				NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 1 } } } #1st round
				AND = {
					event_target:combatant_1 = { check_variable = { which = duel_rounds value = 3 } } #4th round
					NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 4 } } }
				}
				event_target:combatant_1 = { check_variable = { which = duel_rounds value = 6 } } #7th round and later
			}
		}
	}

	desc = {
		text = "EVTDESC_DragonDuel_10"
		trigger = {
			OR = {
				AND = {
					event_target:combatant_1 = { check_variable = { which = duel_rounds value = 1 } } #2nd round
					NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 2 } } }
				}
				AND = {
					event_target:combatant_1 = { check_variable = { which = duel_rounds value = 4 } } #5th round
					NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 5 } } }
				}
			}
		}
	}

	desc = {
		text = "EVTDESC_DragonDuel_11"
		trigger = {
			OR = {
				AND = {
					event_target:combatant_1 = { check_variable = { which = duel_rounds value = 2 } } #3rd round
					NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 3 } } }
				}
				AND = {
					event_target:combatant_1 = { check_variable = { which = duel_rounds value = 5 } } #6th round
					NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 6 } } }
				}
			}
		}
	}

	#Contexts
	desc = {
		text = EVTDESC_DragonDuel_2.BATTLE
		trigger = {
			has_character_flag = flag_battlefield_duel
		}
	}
	desc = {
		text = EVTDESC_DragonDuel_2.COURT
		trigger = {
			OR = {
				#court duels: feast/regency?
				has_character_flag = coronation_duelist
				has_character_flag = feast_duelist
				has_character_flag = duelist_courtier
			}
		}
	}

	#My Traits
	desc = {
		text = EVTDESC_DragonDuel_2.WOUNDED
		trigger = { has_injury_trigger = yes }
	}
	desc = {
		text = EVTDESC_DragonDuel_2.MAIMED
		trigger = { is_maimed_trigger = yes }
	}
	desc = {
		text = EVTDESC_DragonDuel_2.ILL
		trigger = {
			OR = {
				is_ill = yes
				has_epidemic = yes
			}
		}
	}
	desc = {
		text = EVTDESC_DragonDuel_2.YOUNG
		trigger = {
			NOT = { age = 20 }
			NOT = { trait = tall }
			is_strong_trigger = no
		}
	}

	#Opponent Traits
	desc = {
		text = EVTDESC_DragonDuel_2.WOUNDEDOPP
		trigger = { event_target:combatant_1 = { has_injury_trigger = yes } }
	}
	desc = {
		text = EVTDESC_DragonDuel_2.MAIMEDOPP
		trigger = { event_target:combatant_1 = { is_maimed_trigger = yes } }
	}
	desc = {
		text = EVTDESC_DragonDuel_2.ILLOPP
		trigger = {
			event_target:combatant_1 = {
				OR = {
					is_ill = yes
					has_epidemic = yes
				}
			}
		}
	}
	desc = {
		text = EVTDESC_DragonDuel_2.YOUNGOPP
		trigger = {
			event_target:combatant_1 = {
				NOT = { age = 24 }
				NOT = { trait = tall }
				is_strong_trigger = no
			}
		}
	}

	option = {
		name = {
			text = "EVTOPTA_DragonDuel_2" #default
			trigger = { }
		}
		name = {
			text = "EVTOPTA_DragonDuel_2.WOUNDED"
			trigger = {
				has_injury_trigger = yes
			}
		}
		name = {
			text = "EVTOPTA_DragonDuel_2.MAIMED"
			trigger = {
				is_maimed_trigger = yes
			}
		}
		name = {
			text = "EVTOPTA_DragonDuel_2.WOUNDEDOPP"
			trigger = { event_target:combatant_1 = { has_injury_trigger = yes } }
		}
		name = {
			text = "EVTOPTA_DragonDuel_2.YOUNGOPP"
			trigger = {
				event_target:combatant_1 = {
					NOT = { age = 24 }
					NOT = { trait = tall }
					is_strong_trigger = no
				}
			}
		}
		hidden_tooltip = { event_target:combatant_1 = { character_event = { id = DragonDuel.3 } } }
	}
}
# Duelist Two Round (flavour text 1)
character_event = {
	id = DragonDuel.3
	picture = GFX_evt_duel0
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes

	desc = {
		text = "EVTDESC_DragonDuel_3"
		trigger = {
			OR = {
				NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 1 } } } #1st round
				AND = {
					event_target:combatant_1 = { check_variable = { which = duel_rounds value = 3 } } #4th round
					NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 4 } } }
				}
				event_target:combatant_1 = { check_variable = { which = duel_rounds value = 6 } } #7th round and later
			}
		}
	}

	desc = {
		text = "EVTDESC_DragonDuel_12"
		trigger = {
			OR = {
				AND = {
					event_target:combatant_1 = { check_variable = { which = duel_rounds value = 1 } } #2nd round
					NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 2 } } }
				}
				AND = {
					event_target:combatant_1 = { check_variable = { which = duel_rounds value = 4 } } #5th round
					NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 5 } } }
				}
			}
		}
	}

	desc = {
		text = "EVTDESC_DragonDuel_13"
		trigger = {
			OR = {
				AND = {
					event_target:combatant_1 = { check_variable = { which = duel_rounds value = 2 } } #3rd round
					NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 3 } } }
				}
				AND = {
					event_target:combatant_1 = { check_variable = { which = duel_rounds value = 5 } } #6th round
					NOT = { event_target:combatant_1 = { check_variable = { which = duel_rounds value = 6 } } }
				}
			}
		}
	}

	#Contexts
	desc = {
		text = EVTDESC_DragonDuel_3.BATTLE
		trigger = {
			has_character_flag = flag_battlefield_duel
		}
	}
	desc = {
		text = EVTDESC_DragonDuel_3.COURT
		trigger = {
			OR = {
				#court duels: feast/regency?
				has_character_flag = coronation_duelist
				has_character_flag = feast_duelist
				has_character_flag = duelist_courtier
			}
		}
	}

	#My Traits
	desc = {
		text = EVTDESC_DragonDuel_3.WOUNDED
		trigger = { has_injury_trigger = yes }
	}
	desc = {
		text = EVTDESC_DragonDuel_3.MAIMED
		trigger = { is_maimed_trigger = yes }
	}
	desc = {
		text = EVTDESC_DragonDuel_3.ILL
		trigger = {
			OR = {
				is_ill = yes
				has_epidemic = yes
			}
		}
	}
	desc = {
		text = EVTDESC_DragonDuel_3.YOUNG
		trigger = {
			NOT = { age = 24 }
			NOT = { trait = tall }
			is_strong_trigger = no
		}
	}

	#Opponent Traits
	desc = {
		text = EVTDESC_DragonDuel_3.WOUNDEDOPP
		trigger = { event_target:combatant_2 = { has_injury_trigger = yes } }
	}
	desc = {
		text = EVTDESC_DragonDuel_3.MAIMEDOPP
		trigger = { event_target:combatant_2 = { is_maimed_trigger = yes } }
	}
	desc = {
		text = EVTDESC_DragonDuel_3.ILLOPP
		trigger = {
			event_target:combatant_2 = {
				OR = {
					is_ill = yes
					has_epidemic = yes
				}
			}
		}
	}
	desc = {
		text = EVTDESC_DragonDuel_3.YOUNGOPP
		trigger = {
			event_target:combatant_2 = {
				NOT = { age = 24 }
				NOT = { trait = tall }
				is_strong_trigger = no
			}
		}
	}

	option = {
		name = {
			text = "EVTOPTA_DragonDuel_3" #default
			trigger = {
			}
		}
		name = {
			text = "EVTOPTA_DragonDuel_2.WOUNDED"
			trigger = {
				has_injury_trigger = yes
			}
		}
		name = {
			text = "EVTOPTA_DragonDuel_2.MAIMED"
			trigger = {
				is_maimed_trigger = yes
			}
		}
		name = {
			text = "EVTOPTA_DragonDuel_3.WOUNDEDOPP"
			trigger = { event_target:combatant_2 = { has_injury_trigger = yes } }
		}
		name = {
			text = "EVTOPTA_DragonDuel_3.YOUNGOPP"
			trigger = {
				event_target:combatant_2 = {
					NOT = { age = 24 }
					NOT = { trait = tall }
					is_strong_trigger = no
				}
			}
		}
		hidden_tooltip = { e_rebels = { holder_scope = { character_event = { id = DragonDuel.4 } } } }
	}
}

# RESOLVE ROUND - WINNER
# Determine who "won" the round by weighting stats
character_event = {
	id = DragonDuel.4
	is_triggered_only = yes
	hide_window = yes

	# Nobody but the actual referee should ever get this
	trigger = { has_landed_title = e_rebels }

	immediate = {
		event_target:combatant_1 = { change_variable = { which = duel_rounds value = 1 } }
		event_target:combatant_2 = { change_variable = { which = duel_rounds value = 1 } }

		random_list = {
			1 = { #Combatant 1 wins
				# Skill-at-Arms Effects
				modifier = {
					factor = 3
					event_target:combatant_1 = {
						random_friend = {
							limit = { is_tamed_dragon = yes }
							check_variable = { which = global_RdrastrvarA which = global_RdrastrvarB }
						}
					}
				}
				
				event_target:combatant_2 = {
					save_event_target_as = round_loser
					random_friend = {
						limit = { is_tamed_dragon = yes }
						save_event_target_as = Dragon_Winner
					}
				}
				event_target:combatant_1 = {
					save_event_target_as = round_winner
					random_friend = {
						limit = { is_tamed_dragon = yes }
						save_event_target_as = Dragon_Loser
					}
					character_event = { id = DragonDuel.5 }
				}
			}
			1 = { #Combatant 2 wins
				# Skill-at-Arms Effects
				modifier = {
					factor = 3
					event_target:combatant_2 = { 
						random_friend = {
							limit = { is_tamed_dragon = yes }
							check_variable = { which = global_RdrastrvarB which = global_RdrastrvarA }
						}
					}
				}

				event_target:combatant_1 = {
					save_event_target_as = round_loser
				}
				event_target:combatant_2 = {
					save_event_target_as = round_winner
					character_event = { id = DragonDuel.5 }
				}
			}
		}
	}
}

# Winner attacks!
character_event = {
	id = DragonDuel.5
	picture = GFX_evt_duel1
	border = "GFX_event_normal_frame_war"
	hide_from = yes

	is_triggered_only = yes

	#Default
	desc = {
		text = EVTDESC_DragonDuel_5
		trigger = { }
	}

	desc = {
		text = EVTDESC_DragonDuel_5SKILL
		trigger = {
			OR = {
				trait = skilled_warrior
				trait = master_warrior
			}
		}
	}

	desc = {
		text = EVTDESC_DragonDuel_5STRONG
		trigger = {
			is_strong_trigger = yes
		}
	}

	desc = {
		text = EVTDESC_DragonDuel_5QUICK
		trigger = {
			is_smart_trigger = yes
		}
	}

	desc = {
		text = EVTDESC_DragonDuel_5WROTH
		trigger = {
			trait = wroth
		}
	}

	desc = {
		text = EVTDESC_DragonDuel_5PATIENT
		trigger = {
			trait = patient
		}
	}

	desc = {
		text = EVTDESC_DragonDuel_5DECEITFUL
		trigger = {
			trait = deceitful
		}
	}

	desc = {
		text = EVTDESC_DragonDuel_5TALL
		trigger = {
			trait = tall
		}
	}


	option = {
		name = "EVTOPTA_DragonDuel_5"
		event_target:round_loser = {
			character_event = { id = DragonDuel.6 tooltip = "EVTTOOLTIP_DragonDuel_6" }
		}
	}
}

# Loser is attacked!
character_event = {
	id = DragonDuel.6
	picture = GFX_evt_duel2
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes

	#Default
	desc = {
		text = EVTDESC_DragonDuel_6
		trigger = {  }
	}


	desc = {
		text = EVTDESC_DragonDuel_6SKILL
		trigger = {
			FROM = {
				OR = {
					trait = skilled_warrior
					trait = master_warrior
				}
			}
		}
	}

	desc = {
		text = EVTDESC_DragonDuel_6STRONG
		trigger = {
			FROM = { is_strong_trigger = yes }
		}
	}

	desc = {
		text = EVTDESC_DragonDuel_6QUICK
		trigger = {
			FROM = { is_smart_trigger = yes }
		}
	}
	desc = {
		text = EVTDESC_DragonDuel_6WROTH
		trigger = {
			FROM = { trait = wroth }
		}
	}

	desc = {
		text = EVTDESC_DragonDuel_6PATIENT
		trigger = {
			FROM = { trait = patient }
		}
	}

	desc = {
		text = EVTDESC_DragonDuel_6DECEITFUL
		trigger = {
			FROM = { trait = deceitful }
		}
	}

	desc = {
		text = EVTDESC_DragonDuel_6TALL
		trigger = {
			FROM = { trait = tall }
		}
	}

	option = {
		name = "EVTOPTA_DragonDuel_6"
		hidden_tooltip = { e_rebels = { holder_scope = { character_event = { id = DragonDuel.7 } } } }
	}
}

# Determine attack outcome
character_event = {
	id = DragonDuel.7
	is_triggered_only = yes
	picture = GFX_evt_duel1
	desc = "AI_EVENT"

	# Nobody but the actual referee should ever get this
	trigger = { has_landed_title = e_rebels }

	option = { # Wounding Blow
		name = "AI_EVENT"

		if = {
			limit = {
				event_target:round_winner = { has_character_flag = flag_duel_tourney }
			}
			event_target:round_winner = { character_event = { id = DragonDuel.306 } }
			break = yes
		}
		event_target:round_loser = { character_event = { id = DragonDuel.110 } }

		ai_chance = {
			factor = 33
			modifier = {
				factor = 0.01
				event_target:round_winner = { has_character_flag = flag_duel_friendly }
			}
			modifier = {
				factor = 1.5
				event_target:round_winner = { trait = cruel }
			}
			modifier = {
				factor = 1.25
				event_target:round_winner = { trait = wroth }
			}
			modifier = {
				factor = 1.25
				event_target:round_loser = { trait = brave }
			}
			modifier = {
				factor = 0.8
				event_target:round_winner = { trait = patient }
			}
			modifier = {
				factor = 0.5
				event_target:round_winner = { trait = kind }
			}
		}
	}

	option = { # Subdued Opponent
		name = "AI_EVENT"

		if = {
			limit = {
				event_target:round_winner = { has_character_flag = flag_duel_tourney }
			}
			event_target:round_winner = { character_event = { id = DragonDuel.309 } }
			break = yes
		}
		event_target:round_winner = { character_event = { id = DragonDuel.105 } }

		ai_chance = {
			factor = 34
			# Needs Opponent Taken Alive
			modifier = {
				factor = 10
				event_target:round_winner = {
					OR = {
						any_current_enemy = { character = event_target:round_loser }
						any_current_enemy = { current_heir = { character = event_target:round_loser } }
						any_liege = { any_current_enemy = { character = event_target:round_loser } }
						any_liege = { any_current_enemy = { current_heir = { character = event_target:round_loser } } }
					}
					NOT = {
						OR = {
							trait = lunatic
							trait = possessed
						}
					}
					NOT = {
						OR = {
							trait = wroth
							trait = cruel
							trait = paranoid
						}
					}
					NOT = { #republic feuders
						has_dynasty_flag = the_feuders
						event_target:round_loser = { has_dynasty_flag = the_victims }
					}
					NOT = {
						has_dynasty_flag = the_victims
						event_target:round_loser = { has_dynasty_flag = the_feuders }
					}
				}
			}

			modifier = {
				factor = 0.5
				event_target:round_loser = { has_injury_trigger = yes }
			}
			modifier = {
				factor = 0.25
				event_target:round_loser = { is_maimed_trigger = yes }
			}

			# Personal Opinion Modifiers
			modifier = {
				factor = 1.25
				event_target:round_winner = { opinion = { who = event_target:round_loser value = 10 } }
			}
			modifier = {
				factor = 1.25
				event_target:round_winner = { opinion = { who = event_target:round_loser value = 20 } }
			}
			modifier = {
				factor = 1.25
				event_target:round_winner = { opinion = { who = event_target:round_loser value = 30 } }
			}
			modifier = {
				factor = 1.25
				event_target:round_winner = { opinion = { who = event_target:round_loser value = 40 } }
			}
			modifier = {
				factor = 1.25
				event_target:round_winner = { opinion = { who = event_target:round_loser value = 50 } }
			}
			modifier = {
				factor = 1.25
				event_target:round_winner = { opinion = { who = event_target:round_loser value = 60 } }
			}
			modifier = {
				factor = 1.25
				event_target:round_winner = { opinion = { who = event_target:round_loser value = 70 } }
			}
			modifier = {
				factor = 1.25
				event_target:round_winner = { opinion = { who = event_target:round_loser value = 80 } }
			}
			modifier = {
				factor = 1.25
				event_target:round_winner = { opinion = { who = event_target:round_loser value = 90 } }
			}
			modifier = {
				factor = 1.25
				event_target:round_winner = { opinion = { who = event_target:round_loser value = 100 } }
			}
			modifier = {
				factor = 0.8
				NOT = { event_target:round_winner = { opinion = { who = event_target:round_loser value = -9 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { event_target:round_winner = { opinion = { who = event_target:round_loser value = -19 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { event_target:round_winner = { opinion = { who = event_target:round_loser value = -29 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { event_target:round_winner = { opinion = { who = event_target:round_loser value = -39 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { event_target:round_winner = { opinion = { who = event_target:round_loser value = -49 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { event_target:round_winner = { opinion = { who = event_target:round_loser value = -59 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { event_target:round_winner = { opinion = { who = event_target:round_loser value = -69 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { event_target:round_winner = { opinion = { who = event_target:round_loser value = -79 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { event_target:round_winner = { opinion = { who = event_target:round_loser value = -89 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { event_target:round_winner = { opinion = { who = event_target:round_loser value = -99 } } }
			}

			modifier = {
				factor = 2
				event_target:round_winner = { trait = just }
			}
		}
	}

	option = { # Killing Blow
		name = "AI_EVENT"

		if = {
			limit = {
				event_target:round_winner = { has_character_flag = flag_duel_tourney }
			}
			event_target:round_winner = { character_event = { id = DragonDuel.311 } }
			break = yes
		}
		event_target:round_winner = { character_event = { id = DragonDuel.201 } }

		ai_chance = {
			factor = 33
			modifier = {
				factor = 0.01
				event_target:round_winner = { has_character_flag = flag_duel_friendly }
			}
			modifier = {
				factor = 0.5
				event_target:round_winner = { NOT = { has_character_flag = flag_battlefield_duel } }
			}
			modifier = {
				factor = 0.9
				event_target:round_winner = { has_character_flag = flag_duel_tourney }
			}
			modifier = {
				factor = 1.5
				event_target:round_winner = { trait = cruel }
			}
			modifier = {
				factor = 1.25
				event_target:round_winner = { trait = wroth }
			}
			modifier = {
				factor = 1.25
				event_target:round_loser = { trait = brave }
			}
			modifier = {
				factor = 0.8
				event_target:round_winner = { trait = patient }
			}
			modifier = {
				factor = 0.5
				event_target:round_winner = { trait = kind }
			}
		}
	}
}

### YIELD OUTCOMES
character_event = {
	id = DragonDuel.105
	desc = "EVTDESC_DragonDuel_105"
	picture = GFX_evt_duel4
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes
	hide_from = yes
	show_from_from = yes
	option = {
		name = "EVTOPTA_DragonDuel_105"
		event_target:round_loser = { character_event = { id = DragonDuel.106 tooltip = "EVTTOOLTIP_DragonDuel_106" } }
	}
}

character_event = {
	id = DragonDuel.106
	desc = "EVTDESC_DragonDuel_106"
	picture = GFX_evt_duel4
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes

	immediate = {
		random = {
			chance = 50
			if = { #Second wound: temporarily lose health, small chance of incapable
				limit = { has_injury_trigger = yes }
				random_list = {
					99 = {
						#temporarily lose health
						health = -0.5
						hidden_tooltip = {
							if = {
								limit = { check_variable = { which = "health_lost" value = 0.1 } }
								change_variable = { which = "health_lost" value = 0.5 }
							}
							if = {
								limit = { NOT = { check_variable = { which = "health_lost" value = 0.1 } } }
								set_variable = { which = "health_lost" value = 0.5 }
							}
						}
					}
					1 = { #maim
						add_trait = incapable
						event_target:round_winner = { set_character_flag = flag_maimed_opponent }
					}
				}
			}
			if = { #First wound: wounded
				limit = { NOT = { has_injury_trigger = yes } NOT = { is_maimed_trigger = yes } }
				add_trait = wounded
				event_target:round_winner = { set_character_flag = flag_wounded_opponent }
			}
		}
	}

	desc = {
		trigger = { is_incapable = yes }
		text = "EVTDESCB_DragonDuel_106"
	}

	option = { #yield
		trigger = {
			OR = {
				has_character_flag = flag_duel_friendly
				NOT = { has_character_flag = flag_duel_to_the_death }
			}
		}
		name = {
			text = "EVTOPTA_DragonDuel_106"
			trigger = { is_incapable = no }
		}
		name = {
			text = "EVTOPTA2_DragonDuel_106"
			trigger = { is_incapable = yes }
		}
		event_target:round_winner = { character_event = { id = DragonDuel.107 tooltip = "EVTTOOLTIP_DragonDuel_107" } }

		ai_chance = {
			factor = 50
			# Nearly Beaten!
			modifier = {
				factor = 4
				is_maimed_trigger = yes
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				has_injury_trigger = yes
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 1.5
				check_variable = { which = health_lost value = 1 }
			}
			modifier = {
				factor = 2
				check_variable = { which = health_lost value = 2 }
			}
			modifier = {
				factor = 4
				check_variable = { which = health_lost value = 3 }
			}

			# Fatigue (Long Fights)
			modifier = {
				factor = 1.5
				check_variable = { which = duel_rounds value = 2 }
			}
			modifier = {
				factor = 3
				check_variable = { which = duel_rounds value = 4 }
			}
			modifier = {
				factor = 5
				check_variable = { which = duel_rounds value = 6 }
			}
			modifier = {
				factor = 10
				check_variable = { which = duel_rounds value = 8 }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				event_target:round_winner = { is_maimed_trigger = yes }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				event_target:round_winner = { has_injury_trigger = yes }
				NOT = { trait = lunatic }
			}
			# Personality Effects
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = wroth
			}
		}
	}

	option = { #fight on
		trigger = {
			NOR = {
				has_character_flag = flag_duel_friendly
				is_incapable = yes
			}
		}
		name = "EVTOPTB_DragonDuel_106"
		event_target:round_winner = { character_event = { id = DragonDuel.112 tooltip = "EVTTOOLTIP_DragonDuel_112" } }
		ai_chance = { factor = 50 }
	}
}

character_event = {
	id = DragonDuel.107
	desc = "EVTDESC_DragonDuel_107"
	picture = GFX_evt_duel4
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes

	desc = {
		text = "EVTDESCB_DragonDuel_107"
		trigger = {
			event_target:round_loser = {
				has_character_flag = fled_from_duel
			}
		}
	}

	desc = {
		text = "EVTDESCC_DragonDuel_107"
		trigger = {
			event_target:round_loser = {
				is_incapable = yes
			}
		}
	}

	option = { #Capture
		name = {
			text = "EVTOPTA_DragonDuel_107"
			trigger = {
				event_target:round_loser = {
					is_incapable = no
				}
			}
		}
		name = {
			text = "EVTOPTA2_DragonDuel_107"
			trigger = {
				event_target:round_loser = {
					is_incapable = yes
				}
			}
		}
		prestige = 15 #win
		set_character_flag = flag_spared_opponent
		hidden_tooltip = { set_variable = { which = duel_rounds value = 0 } }
		event_target:round_loser = {
			clr_character_flag = fled_from_duel
			character_event = { id = DragonDuel.108 tooltip = "EVTTOOLTIP_DragonDuel_108" }
		}
		ai_chance = {
			factor = 5
			# Need Opponent Taken Alive
			modifier = {
				factor = 4
				any_current_enemy = { character = event_target:round_loser }
				NOT = {
					OR = {
						trait = lunatic
						trait = possessed
					}
				}
				NOT = {
					OR = {
						trait = wroth
						trait = cruel
						trait = paranoid
					}
				}
				NOT = { #republic feuders
					has_dynasty_flag = the_feuders
					event_target:round_loser = { has_dynasty_flag = the_victims }
				}
				NOT = {
					has_dynasty_flag = the_victims
					event_target:round_loser = { has_dynasty_flag = the_feuders }
				}
			}
			# Nearly Beaten!
			modifier = {
				factor = 4
				is_maimed_trigger = yes
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				has_injury_trigger = yes
				NOT = { trait = lunatic }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				event_target:round_loser = { is_maimed_trigger = yes }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				event_target:round_loser = { has_injury_trigger = yes }
				NOT = { trait = lunatic }
			}
			# Personal Opinion Modifiers
			modifier = {
				factor = 1.25
				opinion = { who = event_target:round_loser value = 10 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = event_target:round_loser value = 20 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = event_target:round_loser value = 30 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = event_target:round_loser value = 40 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = event_target:round_loser value = 50 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = event_target:round_loser value = 60 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = event_target:round_loser value = 70 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = event_target:round_loser value = 80 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = event_target:round_loser value = 90 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = event_target:round_loser value = 100 }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = event_target:round_loser value = -9 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = event_target:round_loser value = -19 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = event_target:round_loser value = -29 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = event_target:round_loser value = -39 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = event_target:round_loser value = -49 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = event_target:round_loser value = -59 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = event_target:round_loser value = -69 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = event_target:round_loser value = -79 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = event_target:round_loser value = -89 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = event_target:round_loser value = -99 } }
			}

			# Would Be Kinslaying
			modifier = {
				factor = 10
				event_target:round_loser = { is_close_relative = ROOT }
				NOT = { trait = arbitrary }
			}
			modifier = {
				factor = 20
				event_target:round_loser = { is_close_relative = ROOT }
				trait = just
			}

			#Would be unchivalrous
			modifier = {
				factor = 10
				religion_group = the_seven_group
				NOT = { trait = arbitrary }
				event_target:round_loser = {
					religion_group = the_seven_group
					NOR = {
						is_heresy_of = ROOT
						is_parent_religion = ROOT
					}
					NOT = { dynasty = none }
				}
			}

			# Personality Modifiers
			modifier = {
				factor = 5
				trait = kind
			}
			modifier = {
				factor = 2
				trait = gregarious
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 1.25
				trait = trusting
			}
			modifier = {
				factor = 0.8
				trait = paranoid
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.5
				trait = wroth
			}
			modifier = {
				factor = 0.2
				trait = cruel
			}
			modifier = {
				factor = 50
				has_character_flag = flag_duel_friendly
				NOT = {
					OR = {
						trait = lunatic
						trait = possessed
					}
					OR = {
						trait = cruel
						trait = wroth
					}
				}
			}
		}
	}

	option = { #Kill
		name = "EVTOPTB_DragonDuel_107"
		set_character_flag = flag_killed_opponent
		hidden_tooltip = { set_variable = { which = duel_rounds value = 0 } }
		event_target:round_loser = {
			clr_character_flag = fled_from_duel
			character_event = { id = DragonDuel.109 tooltip = "EVTTOOLTIP_DragonDuel_109" }
		}
		ai_chance = {
			factor = 80
			# Friendly Duels
			modifier = {
				factor = 0
				has_character_flag = flag_duel_friendly
				NOT = {
					OR = {
						AND = {
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
							plot_target_char = { character = event_target:round_loser }
						}
						any_backed_character = {
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
							plot_target_char = { character = event_target:round_loser }
						}
						AND = { #republic feuders
							has_dynasty_flag = the_feuders
							event_target:round_loser = { has_dynasty_flag = the_victims }
						}
						AND = {
							has_dynasty_flag = the_victims
							event_target:round_loser = { has_dynasty_flag = the_feuders }
						}
						AND = {
							OR = {
								trait = envious
								trait = ambitious
							}
							NOT = { trait = content }
							OR = {
								any_heir_title = { holder = ROOT }
								any_pretender_title = { holder = ROOT }
								any_pretender_title = { current_heir = { character = ROOT } }
							}
						}
					}
				}
			}
		}
	}

	option = { #Leave them in the dirt
		name = "EVTOPTC_DragonDuel_107"
		trigger = {
			event_target:round_loser = {
				is_incapable = yes
			}
			has_character_flag = flag_battlefield_duel
		}
		hidden_tooltip = {
			set_variable = { which = duel_rounds value = 0 }
			event_target:round_loser = {
				clr_character_flag = fled_from_duel
				set_variable = { which = duel_rounds value = 0 }
			}
		}
		set_character_flag = left_opponent
		character_event = { id = DragonDuel.901 tooltip = "EVTTOOLTIP_DragonDuel_901" }
		ai_chance = {
			factor = 50
		}
	}
}

character_event = {
	id = DragonDuel.108
	desc = "EVTDESC_DragonDuel_108"
	picture = GFX_evt_duel4
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes

	option = {
		name = "EVTOPTA_DragonDuel_108"
		prestige = -10
		event_target:round_winner = { character_event = { id = DragonDuel.901 tooltip = "EVTTOOLTIP_DragonDuel_901" } }
	}
}

character_event = {
	id = DragonDuel.109
	desc = "EVTDESC_DragonDuel_109"
	picture = GFX_evt_duel5
	is_triggered_only = yes

	option = {
		name = "EVTOPTA_DragonDuel_109"
		if = {
			limit = { event_target:round_winner = { is_close_relative = yes } }
			event_target:round_winner = { add_trait = kinslayer }
		}
		if = {
			limit = { has_character_flag = flag_battlefield_duel }
			death = {
				death_reason = death_battle
				killer = event_target:round_winner
			}
			event_target:round_winner = { character_event = { id = DragonDuel.901 tooltip = "EVTTOOLTIP_DragonDuel_901" } }
			hidden_tooltip = {
				set_variable = { which = duel_rounds value = 0 }
				event_target:round_winner = { character_event = { id = DragonDuel.203 } }
			}
			break = yes
		}
		death = {
			death_reason = death_duel
			killer = event_target:round_winner
		}
		event_target:round_winner = { character_event = { id = DragonDuel.901 tooltip = "EVTTOOLTIP_DragonDuel_901" } }
		hidden_tooltip = {
			set_variable = { which = duel_rounds value = 0 }
			event_target:round_winner = { character_event = { id = DragonDuel.203 } }
		}
	}
}

### WOUND OUTCOMES
character_event = {
	id = DragonDuel.110
	desc = "EVTDESC_DragonDuel_110"
	picture = GFX_evt_duel3
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes

	immediate = {
		if = { #Second wound: temporarily lose health, chance of maimed
			limit = { has_injury_trigger = yes }
			random_list = {
				90 = {
					#temporarily lose health
					health = -0.5
					hidden_tooltip = {
						if = {
							limit = { check_variable = { which = "health_lost" value = 0.1 } }
							change_variable = { which = "health_lost" value = 0.5 }
						}
						if = {
							limit = { NOT = { check_variable = { which = "health_lost" value = 0.1 } } }
							set_variable = { which = "health_lost" value = 0.5 }
						}
					}
				}
				10 = { #maim
					modifier = {
						factor = 1.5
						check_variable = { which = health_lost value = 1 }
						NOT = { check_variable = { which = health_lost value = 2 } }
					}
					modifier = {
						factor = 2
						check_variable = { which = health_lost value = 2 }
						NOT = { check_variable = { which = health_lost value = 3 } }
					}
					modifier = {
						factor = 3
						check_variable = { which = health_lost value = 3 }
					}
					add_maimed_trait_effect = yes
					event_target:round_winner = { set_character_flag = flag_maimed_opponent }
				}
			}
		}
		if = { #First wound: wounded
			limit = { NOT = { has_injury_trigger = yes } NOT = { is_maimed_trigger = yes } }
			add_trait = wounded
			event_target:round_winner = { set_character_flag = flag_wounded_opponent }
		}
	}

	option = { #fight on
		name = "EVTOPTA_DragonDuel_110"
		trigger = { NOT = { has_character_flag = flag_duel_friendly } }
		event_target:round_winner = { character_event = { id = DragonDuel.111 tooltip = "EVTTOOLTIP_DragonDuel_111" } }
		ai_chance = { factor = 70 }
	}
	option = { #yield!
		name = "EVTOPTA_DragonDuel_106"
		trigger = {
			OR = {
				has_character_flag = flag_duel_friendly
				NOT = { has_character_flag = flag_duel_to_the_death }
			}
		}
		prestige = -10 #loss
		event_target:round_winner = { character_event = { id = DragonDuel.107 tooltip = "EVTTOOLTIP_DragonDuel_107" } }
		ai_chance = {
			factor = 30
			# Nearly Beaten!
			modifier = {
				factor = 4
				is_maimed_trigger = yes
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				has_injury_trigger = yes
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 1.5
				check_variable = { which = health_lost value = 1 }
			}
			modifier = {
				factor = 2
				check_variable = { which = health_lost value = 2 }
			}
			modifier = {
				factor = 4
				check_variable = { which = health_lost value = 3 }
			}

			# Fatigue (Long Fights)
			modifier = {
				factor = 1.5
				check_variable = { which = duel_rounds value = 2 }
			}
			modifier = {
				factor = 3
				check_variable = { which = duel_rounds value = 4 }
			}
			modifier = {
				factor = 5
				check_variable = { which = duel_rounds value = 6 }
			}
			modifier = {
				factor = 10
				check_variable = { which = duel_rounds value = 8 }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				event_target:round_winner = { is_maimed_trigger = yes }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				event_target:round_winner = { has_injury_trigger = yes }
				NOT = { trait = lunatic }
			}
			# Personality Effects
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = wroth
			}
		}
	}
	option = { #flee
		name = "EVTOPTB_DragonDuel_110"
		trigger = {
			NOT = { has_character_flag = flag_duel_friendly }
			NOT = { has_character_flag = flag_duel_to_the_death }
		}
		set_character_flag = fled_from_duel
		prestige = -10 #loss
		hidden_tooltip = {
			random_list = {
				50 = { #gets away
					# Intrigue Skill
					modifier = {
						factor = 1.1
						event_target:round_loser = { intrigue = 10 }
						NOT = { event_target:round_loser = { intrigue = 15 } }
					}
					modifier = {
						factor = 1.3
						event_target:round_loser = { intrigue = 15 }
						NOT = { event_target:round_loser = { intrigue = 20 } }
					}
					modifier = {
						factor = 1.5
						event_target:round_loser = { intrigue = 20 }
					}

					# Personality Traits
					modifier = {
						factor = 1.5
						event_target:round_loser = { trait = deceitful }
					}
					modifier = {
						factor = 1.3
						event_target:round_loser = { trait = craven }
					}
					modifier = {
						factor = 1.1
						event_target:round_loser = { trait = paranoid }
					}

					# Physical Traits
					modifier = {
						factor = 1.5
						event_target:round_loser = { trait = agile }
					}
					modifier = {
						factor = 1.3
						event_target:round_loser = { trait = perceptive }
					}
					modifier = {
						factor = 1.1
						event_target:round_loser = { trait = dwarf }
					}
					modifier = {
						factor = 0.5
						event_target:round_loser = { trait = clubfooted }
					}
					modifier = {
						factor = 0.75
						event_target:round_loser = { has_injury_trigger = yes }
					}
					modifier = {
						factor = 0.4
						event_target:round_loser = { is_maimed_trigger = yes }
					}

					event_target:round_loser = {
						clr_character_flag = fled_from_duel
						set_character_flag = ran_away_from_duel
					}
					event_target:round_winner = {
						character_event = { id = DragonDuel.901 tooltip = "EVTTOOLTIP_DragonDuel_901" }
						character_event = { id = DragonDuel.113 tooltip = "EVTTOOLTIP_DragonDuel_113" }
					}
				}
				50 = { #caught!
					# Intrigue Skill
					modifier = {
						factor = 1.1
						event_target:round_winner = { intrigue = 10 }
						NOT = { event_target:round_winner = { intrigue = 15 } }
					}
					modifier = {
						factor = 1.3
						event_target:round_winner = { intrigue = 15 }
						NOT = { event_target:round_winner = { intrigue = 20 } }
					}
					modifier = {
						factor = 1.5
						event_target:round_winner = { intrigue = 20 }
					}

					# Personality Traits
					modifier = {
						factor = 1.5
						event_target:round_winner = { trait = deceitful }
					}
					modifier = {
						factor = 1.3
						event_target:round_winner = { trait = craven }
					}
					modifier = {
						factor = 1.1
						event_target:round_winner = { trait = paranoid }
					}

					# Physical Traits
					modifier = {
						factor = 1.5
						event_target:round_winner = { trait = agile }
					}
					modifier = {
						factor = 1.3
						event_target:round_winner = { trait = perceptive }
					}
					modifier = {
						factor = 1.1
						event_target:round_winner = { trait = tall }
					}
					modifier = {
						factor = 0.5
						event_target:round_winner = { trait = clubfooted }
					}
					modifier = {
						factor = 0.75
						event_target:round_winner = { has_injury_trigger = yes }
					}
					modifier = {
						factor = 0.4
						event_target:round_winner = { is_maimed_trigger = yes }
					}

					event_target:round_winner = { character_event = { id = DragonDuel.107 tooltip = "EVTTOOLTIPB_DragonDuel_107" } }
				}
			}
		}
		ai_chance = {
			factor = 30
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				event_target:round_winner = { is_maimed_trigger = yes }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				event_target:round_winner = { has_injury_trigger = yes }
				NOT = { trait = lunatic }
			}
			# Personality Effects
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 5
				trait = deceitful
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.5
				trait = honest
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = wroth
			}
		}
	}
}

character_event = {
	id = DragonDuel.111
	desc = "EVTDESC_DragonDuel_111"
	picture = GFX_evt_duel3
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes

	option = {
		name = "EVTOPTA_DragonDuel_111"
		hidden_tooltip = { e_rebels = { holder_scope = { character_event = { id = DragonDuel.1 } } } }
	}
}

character_event = {
	id = DragonDuel.112
	desc = "EVTDESC_DragonDuel_112"
	picture = GFX_evt_duel3
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes

	option = {
		name = "EVTOPTA_DragonDuel_112"
		hidden_tooltip = { e_rebels = { holder_scope = { character_event = { id = DragonDuel.1 } } } }
	}
}

character_event = {
	id = DragonDuel.113
	desc = "EVTDESC_DragonDuel_113"
	picture = GFX_evt_duel4
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes

	option = {
		name = "EVTOPTA_DragonDuel_113"
		prestige = 15
	}
}

### DEATH OUTCOMES
character_event = {
	id = DragonDuel.201
	desc = "EVTDESC_DragonDuel_201"
	picture = GFX_evt_duel3
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes
	hide_from = yes
	show_from_from = yes

	option = {
		name = "EVTOPTA_DragonDuel_201"
		event_target:round_loser = { character_event = { id = DragonDuel.202 tooltip = "EVTTOOLTIP_DragonDuel_202" } }
	}
}

character_event = {
	id = DragonDuel.202
	desc = "EVTDESC_DragonDuel_202"
	picture = GFX_evt_duel3
	is_triggered_only = yes

	option = {
		name = "EVTOPTA_DragonDuel_202"
		if = {
			limit = { event_target:round_winner = { is_close_relative = yes } }
			event_target:round_winner = { add_trait = kinslayer }
		}
		if = {
			limit = { has_character_flag = flag_battlefield_duel }
			death = {
				death_reason = death_battle
				killer = event_target:round_winner
			}
			event_target:round_winner = {
				set_character_flag = flag_killed_opponent
				character_event = { id = DragonDuel.901 tooltip = "EVTTOOLTIP_DragonDuel_901" }
			}
			hidden_tooltip = {
				set_variable = { which = duel_rounds value = 0 }
				event_target:round_winner = { character_event = { id = DragonDuel.203 } }
			}
			break = yes
		}
		death = {
			death_reason = death_duel
			killer = event_target:round_winner
		}
		random_list = {
			70 = {
				event_target:Dragon_Loser = {
					death = {
						death_reason = death_battle
						killer = event_target:Dragon_Winner
					}
				}
			}
			15 = {
				event_target:Dragon_Loser = {
					add_trait = dragon_wounded
				}
			}
			15 = {
				event_target:Dragon_Loser = {
					add_trait = dragon_maimed
				}
			}
		event_target:round_winner = {
			set_character_flag = flag_killed_opponent
			character_event = { id = DragonDuel.901 tooltip = "EVTTOOLTIP_DragonDuel_901" }
		}
		hidden_tooltip = {
			set_variable = { which = duel_rounds value = 0 }
			event_target:round_winner = { character_event = { id = DragonDuel.203 } }
		}
	}
}

character_event = {
	id = DragonDuel.203
	desc = "EVTDESC_DragonDuel_203"
	picture = GFX_evt_duel5
	border = "GFX_event_normal_frame_war"
	is_triggered_only = yes

	option = {
		name = "EVTOPTA_DragonDuel_203"
		if = {
			limit = {
				religion_group = the_seven_group
				event_target:round_loser = {
					religion_group = the_seven_group
					NOR = {
						is_heresy_of = ROOT
						is_parent_religion = ROOT
					}
					NOT = { dynasty = none }
				}
			}
			custom_tooltip = {
				text = EVTOPTA_DragonDuel_203_TOOLTIP
			}
			piety = -20
		}
		prestige = 25 #killed opponent
	}
}

###
# Duel Engine Output Events
# (Note: currently only battlefield duels are enabled in CK2+/EMF
# Remaining blocks are left as hooks until appropriate duel contexts are enabled,
# orphaned event calls commented out to appease the validator
###

character_event = { # Collect your output from the duel engine.
	id = DragonDuel.901
	desc = "EVTDESC_DragonDuel_901"
	picture = GFX_evt_duel0

	is_triggered_only = yes

	option = {
		name = "EVTOPTA_DragonDuel_901"


		####################
		# Battlefield Duel #
		####################
		if = {
			##########################
			# Find your context flags
			limit = {
				has_character_flag = flag_battlefield_duel
				has_character_flag = flag_killed_opponent
			}
			##########################
			# Call the next event in your event chain
			# FROM will be Winner scope
			# FROMFROM will be Loser scope
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel. (Reason: Battlefield)"
			character_event = { id = DragonDuel.510 tooltip = "EVTTOOLTIP_DragonDuel_510" }
		}
		if = {
			###########################
			# special case: opponent flees
			limit = {
				has_character_flag = flag_battlefield_duel
				OR = {
					FROM = { has_character_flag = ran_away_from_duel }
					has_character_flag = left_opponent
				}
			}
			log = "Duel Engine: [From.GetTitledName] flees from [Root.GetTitledName]."
			FROM = { character_event = { id = DragonDuel.505 } }
			############################
		}
		if = {
			###########################
			# If a kill versus a yield would be important,
			# handle them in seperate blocks.
			limit = {
				has_character_flag = flag_battlefield_duel
				NOR = {
					has_character_flag = flag_killed_opponent
					FROM = { has_character_flag = ran_away_from_duel }
				}
				OR = {
					has_character_flag = flag_spared_opponent
					has_character_flag = flag_wounded_opponent #Todo
					has_character_flag = flag_maimed_opponent #Todo
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel. (Reason: Battlefield)"
			character_event = { id = DragonDuel.511 tooltip = "EVTTOOLTIP_DragonDuel_511" }
			############################
		}
		##########################
		# CLEAR YOUR CONTEXT FLAGS
		clr_character_flag = flag_battlefield_duel
		FROM = { clr_character_flag = flag_battlefield_duel }
		FROMFROM = { clr_character_flag = flag_battlefield_duel }
		###########################
		# End of battlefield duel Block
		#############################

		###WoL War Focus duels
		if = {
			limit = {
				has_character_flag = wol_focus_duel
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (War Focus)"
			add_character_modifier = {
				modifier = recent_duel_victory
				months = 12
			}
			if = {
				limit = { has_character_flag = flag_killed_opponent }
				random_list = {
					1 = {
						long_character_event = { id = WoL.11011 }
					}
					200 = {
						custom_tooltip = {
							text = EVTTOOLTIPWOL11006
							hidden_tooltip = {
								any_realm_character = {
									opinion = {
										modifier = opinion_ruthless
										who = ROOT
										months = 60
									}
								}
							}
						}
						if = {
							limit = {
								has_character_modifier = merciless
							}
							if = {
								limit = {
									has_nickname = no
								}
								give_nickname = nick_the_ruthless
							}
						}
						if = {
							limit = {
								NOT = { has_character_modifier = merciless }
							}
							add_character_modifier = {
								modifier = merciless
								duration = -1
							}
						}
					}
				}
			}
			if = {
				limit = { has_character_flag = flag_spared_opponent }
				FROM = {
					random = {
						chance = 35
						character_event = { id = WoL.11013 days = 3 }
					}
				}
			}
			# hidden_tooltip = { character_event = { id = 720 } } # Bring it On achievement check event
			clr_character_flag = wol_focus_duel
			clr_character_flag = flag_beheaded_opponent
			FROM = { clr_character_flag = wol_focus_duel }
			FROMFROM = { clr_character_flag = wol_focus_duel }
		}

		###WoL Lover duels
		if = {
			limit = {
				has_character_flag = wol_lover_challenger
				has_character_flag = flag_killed_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Lover)"
			set_character_flag = enemy_killed
			FROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			FROMFROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			character_event = { id = WoL.1036 } # Notify
		}
		if = {
			limit = {
				has_character_flag = wol_lover_challenger
				has_character_flag = flag_maimed_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Lover)"
			set_character_flag = enemy_maimed
			FROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			FROMFROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			character_event = { id = WoL.1036 } # Notify
		}
		if = {
			limit = {
				has_character_flag = wol_lover_challenger
				has_character_flag = flag_wounded_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Lover)"
			set_character_flag = enemy_wounded
			FROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			FROMFROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			character_event = { id = WoL.1036 } # Notify
		}
		if = {
			limit = {
				has_character_flag = wol_lover_challenger
				has_character_flag = flag_spared_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Lover)"
			set_character_flag = enemy_yields
			FROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			FROMFROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			character_event = { id = WoL.1036 } # Notify
		}

		if = {
			limit = {
				has_character_flag = wol_lover_challenged
				has_character_flag = flag_killed_opponent
			}
			set_character_flag = enemy_killed
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Lover)"
			FROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			FROMFROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			character_event = { id = WoL.1039 } # Notify
		}
		if = {
			limit = {
				has_character_flag = wol_lover_challenged
				has_character_flag = flag_maimed_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Lover)"
			set_character_flag = enemy_maimed
			FROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			FROMFROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			character_event = { id = WoL.1039 } # Notify
		}
		if = {
			limit = {
				has_character_flag = wol_lover_challenged
				has_character_flag = flag_wounded_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Lover)"
			set_character_flag = enemy_wounded
			FROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			FROMFROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			character_event = { id = WoL.1039 } # Notify
		}
		if = {
			limit = {
				has_character_flag = wol_lover_challenged
				has_character_flag = flag_spared_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Lover)"
			set_character_flag = enemy_yields
			FROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			FROMFROM = {
				clr_character_flag = wol_lover_challenger
				clr_character_flag = wol_lover_challenged
			}
			character_event = { id = WoL.1039 } # Notify
		}

		#CK2+ Coronation duels
		if = {
			limit = {
				has_character_flag = coronation_duelist
				has_character_flag = flag_killed_opponent
			}
			any_playable_ruler = {
				limit = { reverse_has_opinion_modifier = { who = ROOT modifier = attending_coronation } }
				save_event_target_as = coronation_duel_host
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Coronation of [coronation_duel_host.GetTitledName])"
			character_event = { id = emf_coronation.1231 }
			FROM = { clr_character_flag = coronation_duelist }
			FROMFROM = { clr_character_flag = coronation_duelist }
		}

		if = {
			limit = {
				has_character_flag = coronation_duelist
				NOT = { has_character_flag = flag_killed_opponent }
			}
			any_playable_ruler = {
				limit = { reverse_has_opinion_modifier = { who = ROOT modifier = attending_coronation } }
				save_event_target_as = coronation_duel_host
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Coronation of [coronation_duel_host.GetTitledName])"
			character_event = { id = emf_coronation.1230 }
			FROM = { clr_character_flag = coronation_duelist }
			FROMFROM = { clr_character_flag = coronation_duelist }
		}

		#################################################
		# Feast duel feast_events.txt starts with 72030 #
		#################################################
		#Hacky: copy results back to forms expected in series, in the future maybe separate events
		if = {
			limit = {
				has_character_flag = feast_duelist
				has_character_flag = flag_killed_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Feast of [feast_duel_host.GetTitledName])"
			set_character_flag = killed_opponent
		}
		if = {
			limit = {
				has_character_flag = feast_duelist
				has_character_flag = flag_wounded_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Feast of [feast_duel_host.GetTitledName])"
			set_character_flag = wounded_opponent
		}
		if = {
			limit = {
				has_character_flag = feast_duelist
				has_character_flag = flag_maimed_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Feast of [feast_duel_host.GetTitledName])"
			set_character_flag = maimed_opponent
		}
		#Hacky stuff done
		if = {
			limit = {
				has_character_flag = feast_duelist
				OR = {
					has_character_flag = flag_spared_opponent
					FROM = { has_character_flag = ran_away_from_duel }
				}
			}
			character_event = { id = DragonDuel.911 } #Nothing happened
			clr_character_flag = feast_duelist
			FROM = { clr_character_flag = feast_duelist }
			FROMFROM = { clr_character_flag = feast_duelist }
		}
		if = {
			limit = {
				has_character_flag = feast_duelist
				OR = {
					has_character_flag = flag_killed_opponent
					has_character_flag = flag_wounded_opponent
					has_character_flag = flag_maimed_opponent
				}
			}
			character_event = { id = DragonDuel.912 } #Liege reacts
			clr_character_flag = feast_duelist
			FROM = { clr_character_flag = feast_duelist }
			FROMFROM = { clr_character_flag = feast_duelist }
		}
		# End of feast_events block
		#############################

		############################################################
		# Rivals duel friends_rivals_events.txt starts with 100410 #
		############################################################
		if = {
			limit = {
				has_character_flag = duel_rival
				OR = {
					has_character_flag = flag_spared_opponent
					FROM = { has_character_flag = ran_away_from_duel }
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Rivals)"
			character_event = { id = DragonDuel.913 } #Nothing happened
			clr_character_flag = duel_rival
			FROM = { clr_character_flag = duel_rival }
			FROMFROM = { clr_character_flag = duel_rival }
		}
		if = {
			limit = {
				has_character_flag = duel_rival
				OR = {
					has_character_flag = flag_wounded_opponent
					has_character_flag = flag_maimed_opponent
					has_character_flag = flag_killed_opponent
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Rivals)"
			character_event = { id = DragonDuel.914 } #Killed, wounded, or maimed rival
			clr_character_flag = duel_rival
			FROM = { clr_character_flag = duel_rival }
			FROMFROM = { clr_character_flag = duel_rival }
		}
		# End of friends_rivals_events block
		#############################

		###################################################################################
		# Rivals duel: cheated at tournament friends_rivals_events.txt starts with 100420 #
		###################################################################################
		if = {
			limit = {
				OR = {
					has_character_flag = tournament_cheater_duel_accuser
					has_character_flag = tournament_cheater_duel_accused
				}
				OR = {
					has_character_flag = flag_spared_opponent
					FROM = { has_character_flag = ran_away_from_duel }
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Rivals at Tourney)"
			character_event = { id = DragonDuel.918 } #No wound etc. = clean win for accused
			clr_character_flag = duel_rival
			FROM = { clr_character_flag = duel_rival }
			FROMFROM = { clr_character_flag = duel_rival }
		}
		if = {
			limit = {
				OR = {
					has_character_flag = tournament_cheater_duel_accuser
					has_character_flag = tournament_cheater_duel_accused
				}
				OR = {
					has_character_flag = flag_wounded_opponent
					has_character_flag = flag_maimed_opponent
					has_character_flag = flag_killed_opponent
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Rivals at Tourney)"
			character_event = { id = DragonDuel.923 } #Killed, wounded, or maimed rival
			clr_character_flag = duel_rival
			#winner's flags used to give proper flavour text so not cleared here
			FROM = { clr_character_flag = tournament_cheater_duel_accuser }
			FROM = { clr_character_flag = tournament_cheater_duel_accused }
		}
		# End of friends_rivals_events block
		#############################

		#####################################################
		# Regency duel regency_events.txt starts with 61215 #
		#####################################################
		if = {
			limit = {
				has_character_flag = duelist_courtier
				OR = {
					has_character_flag = flag_spared_opponent
					has_character_flag = flag_wounded_opponent
					FROM = { has_character_flag = ran_away_from_duel }
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Regency)"
			character_event = { id = DragonDuel.913 } #Nothing happened or just wounded
			clr_character_flag = duelist_courtier
			FROM = { clr_character_flag = duelist_courtier }
			FROMFROM = { clr_character_flag = duelist_courtier }
		}
		if = {
			limit = {
				has_character_flag = duelist_courtier
				has_character_flag = flag_maimed_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Regency)"
			character_event = { id = DragonDuel.916 } #Maimed
			clr_character_flag = duelist_courtier
			FROM = { clr_character_flag = duelist_courtier }
			FROMFROM = { clr_character_flag = duelist_courtier }
		}
		if = {
			limit = {
				has_character_flag = duelist_courtier
				has_character_flag = flag_killed_opponent
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Regency)"
			character_event = { id = DragonDuel.917 } #Killed
			clr_character_flag = duelist_courtier
			FROM = { clr_character_flag = duelist_courtier }
			FROMFROM = { clr_character_flag = duelist_courtier }
		}
		# End of regency_events block
		#############################

		#########################
		# Tournament rival duel #
		#########################
		if = {
			limit = {
				OR = {
					has_character_flag = tourny_duel_defender
					has_character_flag = tourny_duel_agressor
				}
				OR = {
					has_character_flag = flag_spared_opponent
					FROM = { has_character_flag = ran_away_from_duel }
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason:  Tournament)"
			#character_event = { id = joust.20 } #Draw
		}
		if = {
			limit = {
				has_character_flag = duel_rival
				OR = {
					has_character_flag = flag_wounded_opponent
					has_character_flag = flag_maimed_opponent
					has_character_flag = flag_killed_opponent
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Tournament)"
			#character_event = { id = joust.21 } #Killed, wounded, or maimed rival
		}
		# Flags for this are cleared in the followup events since I use them to track of agressor/defender
		# End of Tournament rival duel block
		####################################

		##################################################################
		# Holmgang duel oldgods_holmgang_events.txt starts with TOG.5004 #
		##################################################################
		if = {
			limit = {
				has_character_flag = holmgang_challenger
				has_character_flag = flag_spared_opponent
				FROM = { has_character_flag = flag_wounded_opponent }
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Holmgang)"
			character_event = { id = TOG.5005 } #Wins (Scarred)

		}
		if = {
			limit = {
				has_character_flag = holmgang_challenger
				has_character_flag = flag_spared_opponent
				NOT = {
					FROM = { has_character_flag = flag_wounded_opponent }
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Holmgang)"
			character_event = { id =  TOG.5007 } #Wins
		}
		if = {
			limit = {
				has_character_flag = holmgang_challenger
				has_character_flag = flag_killed_opponent
				OR = {
					FROM = { has_character_flag = flag_wounded_opponent }
					FROM = { has_character_flag = flag_maimed_opponent }
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Holmgang)"
			character_event = { id =  TOG.5006 } #Wins (Scarred, Opponent Dies)
		}
		if = {
			limit = {
				has_character_flag = holmgang_challenger
				has_character_flag = flag_killed_opponent
				NOR = {
					FROM = { has_character_flag = flag_wounded_opponent }
					FROM = { has_character_flag = flag_maimed_opponent }
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Holmgang)"
			character_event = { id =  TOG.5008 } #Wins (Opponent Dies)
		}
		if = {
			limit = {
				has_character_flag = holmgang_challenger
				FROM = { has_character_flag = ran_away_from_duel }
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Holmgang, Flight)"
			character_event = { id =  TOG.5009 } #Wins (Opponent Flees)
		}
		if = {
			limit = {
				has_character_flag = holmgang_target
				has_character_flag = flag_spared_opponent
				NOR = {
					FROM = { has_character_flag = flag_wounded_opponent }
					FROM = { has_character_flag = flag_maimed_opponent }
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Holmgang)"
			character_event = { id =  TOG.5022 } #Wins Opponent
			FROM = { character_event = { id =  TOG.5012 } } #Loses (Wounded)
		}
		if = {
			limit = {
				has_character_flag = holmgang_target
				has_character_flag = flag_killed_opponent
				OR = {
					FROM = { has_character_flag = flag_wounded_opponent }
					FROM = { has_character_flag = flag_maimed_opponent }
				}
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Holmgang)"
			character_event = { id =  TOG.5021 } # Wins (Scarred, Opponent Dies) Opponent
		}
		if = {
			limit = {
				has_character_flag = holmgang_target
				has_character_flag = flag_killed_opponent
				NOT = { FROM = { has_character_flag = flag_wounded_opponent } }
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Holmgang)"
			character_event = { id =  TOG.5023 } # Wins (Opponent Dies) Opponent
		}
		if = {
			limit = {
				has_character_flag = holmgang_target
				FROM = { has_character_flag = ran_away_from_duel }
			}
			log = "Duel Engine: [Root.GetTitledName] defeats [From.GetTitledName] in duel (Reason: Holmgang)"
			character_event = { id =  TOG.5024 } # Wins (Opponent Flees) Opponent
			FROM = { character_event = { id =  TOG.5011 } } #Loses (Flees in Disgrace)
		}
		# Flags are cleared by vanilla output events
		# End of oldgods_holmgang_events block
		#############################

		##########################
		# Generic duel victory forwarder for combat trait advancement in emf_cta.10 (cta_events.txt)
		#
		# Bounce the loser scope into FROM via CombatTraits.11 so that CombatTraits.10's potential child events
		# will have access to the loser in the FROMFROM scope like duel_output's children.

		FROM = { character_event = { id = emf_cta.11 } }


		#############################
		# Special Context Flag Cleanup
		#############################
		clr_character_flag = flag_duel_friendly
		FROM = { clr_character_flag = flag_duel_friendly }
		clr_character_flag = flag_duel_to_the_death
		FROM = { clr_character_flag = flag_duel_to_the_death }
		clr_character_flag = flag_duel_tourney
		FROM = { clr_character_flag = flag_duel_tourney }
		#############################
		# Clear kill/mercy flags
		clr_character_flag = flag_killed_opponent
		FROM = { clr_character_flag = flag_killed_opponent }
		clr_character_flag = ran_away_from_duel
		FROM = { clr_character_flag = ran_away_from_duel }
		clr_character_flag = left_opponent
		FROM = { clr_character_flag = left_opponent }
		clr_character_flag = flag_wounded_opponent
		FROM = { clr_character_flag = flag_wounded_opponent }
		clr_character_flag = flag_maimed_opponent
		FROM = { clr_character_flag = flag_maimed_opponent }
		clr_character_flag = flag_spared_opponent
		FROM = { clr_character_flag = flag_spared_opponent }
	}
}

character_event = { #Collects output from the duel engine - Tourney joust flavour
	id = DragonDuel.902
	desc = "EVTDESC_DragonDuel_902"
	picture = GFX_evt_joust

	is_triggered_only = yes

	option = {
		name = "EVTOPTA_DragonDuel_901"

		#####################
		# Tournament Jousts #
		#####################

		if = {
			limit = {
				has_character_flag = tournament_fighter
				has_character_flag = flag_spared_opponent
			}
			#character_event = { id = 70110 } #Clean win
			clr_character_flag = tournament_fighter
			FROM = { clr_character_flag = tournament_fighter }
		}
		if = {
			limit = {
				has_character_flag = tournament_fighter
				has_character_flag = flag_wounded_opponent
			}
			#FROM = { character_event = { id = 70011 } }
			#character_event = { id = 70110 } #Wounded loser
			clr_character_flag = tournament_fighter
			FROM = { clr_character_flag = tournament_fighter }
		}
		if = {
			limit = {
				has_character_flag = tournament_fighter
				has_character_flag = flag_maimed_opponent
			}
			#FROM = { character_event = { id = 70010 } }
			#character_event = { id = 70110 } #Maimed loser
			clr_character_flag = tournament_fighter
			FROM = { clr_character_flag = tournament_fighter }
		}
		if = {
			limit = {
				has_character_flag = tournament_fighter
				has_character_flag = flag_killed_opponent
			}
			#FROM = { character_event = { id = 70009 } }
			#character_event = { id = 70110 } #Killed loser
			clr_character_flag = tournament_fighter
			FROM = { clr_character_flag = tournament_fighter }
		}

		# End of tournament jousts block
		################################

		##########################
		# Generic duel victory forwarder for combat trait advancement in CombatTraits.10 (PB_CombatTraits.txt)
		#
		# Bounce the loser scope into FROM via CombatTraits.11 so that CombatTraits.10's potential child events
		# will have access to the loser in the FROMFROM scope like duel_output's children.
		#
		# Assumption: DragonDuel.902 is only ever triggered on the winner of a joust,
		#			 like DragonDuel.901, by the loser in the FROM scope (from inspection of
		#			 tournament_events.txt / joust.*, that appears to be the case).

		FROM = { character_event = { id = emf_cta.11 } }
		if = {
			limit = { has_focus = focus_war }
			random = {
				chance = 25
				character_event = { id = WoL.11200 }
			}
		}


		#############################
		# Special Context Flag Cleanup
		#############################
		clr_character_flag = flag_duel_friendly
		FROM = { clr_character_flag = flag_duel_friendly }
		clr_character_flag = flag_duel_to_the_death
		FROM = { clr_character_flag = flag_duel_to_the_death }
		clr_character_flag = flag_duel_tourney
		FROM = { clr_character_flag = flag_duel_tourney }
		#############################
		#############################
		# Clear kill/mercy flags
		clr_character_flag = flag_killed_opponent
		FROM = { clr_character_flag = flag_killed_opponent }
		clr_character_flag = flag_wounded_opponent
		FROM = { clr_character_flag = flag_wounded_opponent }
		clr_character_flag = flag_maimed_opponent
		FROM = { clr_character_flag = flag_maimed_opponent }
		clr_character_flag = flag_spared_opponent
		FROM = { clr_character_flag = flag_spared_opponent }
	}
}


# DragonDuel.903	Something broke, cancel everything

character_event = {
	id = DragonDuel.903
	desc = "EVTDESC_DragonDuel_903"
	picture = GFX_evt_battle

	is_triggered_only = yes

	option = {
		name = OK

		#############################
		# Special Context Flag Cleanup
		#############################
		clr_character_flag = flag_duel_friendly
		FROM = { clr_character_flag = flag_duel_friendly }
		clr_character_flag = flag_duel_to_the_death
		FROM = { clr_character_flag = flag_duel_to_the_death }
		clr_character_flag = flag_duel_tourney
		FROM = { clr_character_flag = flag_duel_tourney }
		#############################
		# Clear kill/mercy flags
		clr_character_flag = flag_killed_opponent
		FROM = { clr_character_flag = flag_killed_opponent }
		clr_character_flag = flag_wounded_opponent
		FROM = { clr_character_flag = flag_wounded_opponent }
		clr_character_flag = flag_maimed_opponent
		FROM = { clr_character_flag = flag_maimed_opponent }
		clr_character_flag = flag_spared_opponent
		FROM = { clr_character_flag = flag_spared_opponent }
	}
}

###
# OUTPUT HELPER EVENTS
###

#feast battle results
character_event = {
	id = DragonDuel.911
	desc = EVTDESC_DragonDuel_911
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA_DragonDuel_911
		hidden_tooltip = { FROM = { character_event = { id = 72034 } } } #Nothing happened
	}
}
character_event = {
	id = DragonDuel.912
	picture = GFX_evt_battle
	desc = "EVTDESC_DragonDuel_901"
	is_triggered_only = yes

	option = {
		name = EVTOPTA_DragonDuel_912
		hidden_tooltip = { FROM = { character_event = { id = 72033 } } } #Liege reacts
	}
}

#rival duel results
character_event = {
	id = DragonDuel.913
	desc = EVTDESC_DragonDuel_911
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA_DragonDuel_913
		#draw
	}
}
character_event = {
	id = DragonDuel.914
	desc = "EVTDESC_DragonDuel_901"
	picture = GFX_evt_battle
	is_triggered_only = yes


	option = {
		name = EVTOPTC100415
		hidden_tooltip = { FROMFROM = { character_event = { id = DragonDuel.915 } } } #Loser was wounded
	}
}
character_event = {
	id = DragonDuel.915
	desc = EVTDESC100415
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA100415
		opinion = {
			modifier = opinion_revenge_seeker
			who = FROM
			years = 50
		}
	}
}
#regency battle
character_event = {
	id = DragonDuel.916
	desc = "EVTDESC_DragonDuel_901"
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA_DragonDuel_901
		hidden_tooltip = {
			IF = {
				limit = { FROM = { has_minor_title = title_regent } }
				#FROM = { character_event = { id = 61226 } }
				#FROMFROM = { character_event = { id = 61230 } }
			}
			IF = {
				limit = { FROMFROM = { has_minor_title = title_regent } }
				#FROM = { character_event = { id = 61229 } }
				#FROMFROM = { character_event = { id = 61227 } }
			}
		}
	}
}
character_event = {
	id = DragonDuel.917
	desc = "EVTDESC_DragonDuel_901"
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA_DragonDuel_901
		hidden_tooltip = {
			IF = {
				limit = { FROM = { has_minor_title = title_regent } }
				#FROM = { character_event = { id = 61225 } }
			}
			IF = {
				limit = { FROMFROM = { has_minor_title = title_regent } }
				#FROM = { character_event = { id = 61228 } }
			}
		}
	}
}
#tournament cheat duel results
character_event = { #hidden selector to pick proper flavour text
	id = DragonDuel.918
	desc = EVTDESC_DragonDuel_911
	picture = GFX_evt_battle
	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_DragonDuel_913
		trigger = { FROM = { has_character_flag = tournament_cheater_duel_accused } }
		FROM = { character_event = { id = DragonDuel.919 } }
		FROMFROM = { character_event = { id = DragonDuel.920 } }
	}
	option = {
		name = EVTOPTA_DragonDuel_913
		trigger = { FROM = { has_character_flag = tournament_cheater_duel_accuser } }
		FROM = { character_event = { id = DragonDuel.921 } }
		FROMFROM = { character_event = { id = DragonDuel.922 } }
	}
}
character_event = { #accused beat accuser
	id = DragonDuel.919
	desc = EVTDESC100428
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTB100428
		prestige = 10
		clr_character_flag = tournament_cheater_duel_accused
	}
}
character_event = { #accuser lost to accused
	id = DragonDuel.920
	desc = EVTDESC_DragonDuel_920
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA100428
	}
}
character_event = { #accuser beat cheater
	id = DragonDuel.921
	desc = EVTDESC_DragonDuel_920
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA_DragonDuel_921
		prestige = 10
		clr_character_flag = tournament_cheater_duel_accuser
	}
}
character_event = { #cheater lost to accused
	id = DragonDuel.922
	desc = EVTDESC100428
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA100428
	}
}
character_event = { #hidden selector to pick proper flavour text
	id = DragonDuel.923
	desc = "EVTDESC_DragonDuel_901"
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA_DragonDuel_913
		trigger = { FROM = { has_character_flag = tournament_cheater_duel_accused } }
		FROM = { character_event = { id = DragonDuel.924 } }
		FROMFROM = {
			character_event = { id = DragonDuel.925 }
			opinion = {
				modifier = opinion_revenge_seeker
				who = FROM
				years = 50
			}
		}
	}
	option = {
		name = EVTOPTA_DragonDuel_913
		trigger = { FROM = { has_character_flag = tournament_cheater_duel_accuser } }
		FROM = { character_event = { id = DragonDuel.926 } }
		FROMFROM = {
			character_event = { id = DragonDuel.927 }
			opinion = {
				modifier = opinion_revenge_seeker
				who = FROM
				years = 50
			}
		}
	}
}
character_event = { #accused beat accuser
	id = DragonDuel.924
	desc = EVTDESC100428
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTC100428
		prestige = 10
		clr_character_flag = tournament_cheater_duel_accused
	}
}
character_event = { #accuser lost to accused
	id = DragonDuel.925
	desc = EVTDESC_DragonDuel_920
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA100428
	}
}
character_event = { #accuser beat cheater
	id = DragonDuel.926
	desc = EVTDESC_DragonDuel_920
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA_DragonDuel_926
		prestige = 10
		clr_character_flag = tournament_cheater_duel_accuser
	}
}
character_event = { #cheater lost to accused
	id = DragonDuel.927
	desc = EVTDESC100428
	picture = GFX_evt_battle
	is_triggered_only = yes

	option = {
		name = EVTOPTA100428
	}
}
