###################
###DRAGON ENGINE###
###################

####Basic dragon engine events 000-099 ####
#000	Initialize dragon stat calculation
#001	Sets dragon's status
#002	Simulates the dragon's growth
#003	Kills the dragon
#004	Decreases the infamy gained in sieges/battles when behaving peacufully
#005	Adds dragon egg to dragon to set dragon as FROM for renaming

####Dragon in combat events 100-199####
#100	Use your dragon battle
#101	Use your dragon in siege
#102	Enemy gets wounded or dies in battle
#103	Enemy gets wounded or dies in siege
#104	Dislpays wounded/maimed/severely injured and killed characters in battle/siege
#105	Destroy the enemy's fortification
#106	Enemy troops decide to join you

####Dragon flavor events 200####
#200	Face the dragon
#201	Taming successful!
#202	Taming failed!
#203	Dragon rider gets his dragon's egg
#204	Dragon egg hatched
#205	Black dragon egg transfered
#206	Blue dragon egg transfered
#207	Green dragon egg transfered
#208	Red dragon egg transfered
#209	White dragon egg transfered

namespace = dragon

#	Initialize dragon stat calculation
character_event = {
	id = dragon.0

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_dragon = yes
	}
	
	immediate = {
		# Dragon stat Calculation
		dragon_stat_calculation = yes
		repeat_event = { id = dragon.0 days = 31 }
		character_event = { id = dragon.1 days = 1 }
	}
}

#	Sets dragon's status
character_event = {
	id = dragon.1

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_dragon = yes
	}
	
	immediate = {
		if = {
			limit = { 
				any_friend = { is_dragon_rider = yes }
			}
			set_character_flag = is_tamed_dragon
		}
		if = {
			limit = { 
				any_friend = { is_dragon_rider = no }
			}
			set_character_flag = is_wild_dragon
		}
	}
}

#	Simulates the dragon's growth
character_event = {
	id = dragon.2

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_dragon = yes
	}
	
	immediate = {
		change_martial = 1
		random = {
			chance = 25
			modifier = {
				factor = 2
				trait = dragon_strong
			}
			change_martial = 1
		}
	}
}

#	Kills the dragon
character_event = {
	id = dragon.3

	#is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_dragon = yes
		age = 110
	}
	
	mean_time_to_happen = { days = 1 }
	
	immediate = {
		random = {
			chance = 30
			modifier = {
				factor = 0
				age < 110
			}
			modifier = {
				factor = 1.2
				age <= 120
				NOT = { age <= 110 }
			}
			modifier = {
				factor = 1.4
				age <= 130
				NOT = { age <= 120 }
			}
			modifier = {
				factor = 1.6
				age <= 140
				NOT = { age <= 130 }
			}
			modifier = {
				factor = 1.8
				age <= 150
				NOT = { age <= 140 }
			}
			modifier = {
				factor = 2.2
				age <= 160
				NOT = { age <= 150 }
			}
			death = { death_reason = death_natural } 
		}
	}
}

#	Decreases the infamy gained in sieges/battles when behaving peacufully
character_event = {
	id = dragon.4

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_dragon_rider = yes
		NOT = { has_character_modifier = used_dragon_in_battle_siege_hidden }
	}
	
	immediate = {
		change_infamy = {
			value = -2
			localisation = dragon_infamy
		}
	}
}

#	Adds dragon egg to dragon to set dragon as FROM for renaming
character_event = {
	id = dragon.5
	
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_dragon = yes
	}
	
	immediate = {
		random_list = {
			20 = {
				random = {
					chance = 10
					add_artifact = black_dragon_egg
					new_artifact = {
						save_event_target_as = created_dragon_egg
						set_name = "[From.GetFirstName]'s egg"
						set_artifact_original_owner = ROOT
					}
					if = {
						limit = { any_friend = { is_dragon_rider = yes } }
						random_friend = {
							character_event = { id = dragon.205 }
						}
					}
				}
			}
			20 = {
				random = {
					chance = 10
					add_artifact = blue_dragon_egg
					new_artifact = {
						save_event_target_as = created_dragon_egg
						set_name = "[From.GetFirstName]'s egg"
						set_artifact_original_owner = ROOT
					}
					if = {
						limit = { any_friend = { is_dragon_rider = yes } }
						random_friend = {
							character_event = { id = dragon.206 }
						}
					}
				}
			}
			20 = {
				random = {
					chance = 10
					add_artifact = green_dragon_egg
					new_artifact = {
						save_event_target_as = created_dragon_egg
						set_name = "[From.GetFirstName]'s egg"
						set_artifact_original_owner = ROOT
					}
					if = {
						limit = { any_friend = { is_dragon_rider = yes } }
						random_friend = {
							character_event = { id = dragon.207 }
						}
					}
				}
			}
			20 = {
				random = {
					chance = 10
					add_artifact = red_dragon_egg
					new_artifact = {
						save_event_target_as = created_dragon_egg
						set_name = "[From.GetFirstName]'s egg"
						set_artifact_original_owner = ROOT
					}
					if = {
						limit = { any_friend = { is_dragon_rider = yes } }
						random_friend = {
							character_event = { id = dragon.208 }
						}
					}
				}
			}
			20 = {
				random = {
					chance = 10
					add_artifact = white_dragon_egg
					new_artifact = {
						save_event_target_as = created_dragon_egg
						set_name = "[From.GetFirstName]'s egg"
						set_artifact_original_owner = ROOT
					}
					if = {
						limit = { any_friend = { is_dragon_rider = yes } }
						random_friend = {
							character_event = { id = dragon.209 }
						}
					}
				}
			}
		}
	}
}

#	Use your dragon battle
character_event = {
	id = dragon.100
	desc = EVTDESCdragon100
	picture = GFX_evt_battle_dragon
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	trigger = {
		use_dragon_in_battle_potential = yes
	}
	
	immediate = {
		ROOT = {
			any_friend = {
				limit = { is_tamed_dragon = yes }
				save_event_target_as = your_dragon
			}
		}
	}
	
	option = {	#Burn them all!
		name = EVTOPTAdragon100
		tooltip_info = dragon_rider
		
		any_current_enemy =  {
			any_realm_character = {
				limit = {
					in_command = yes
					prisoner = no
					NOT = { character = ROOT }
					is_dragon_rider = no
					at_location = ROOT
					#has_siege = no
				}
				opinion = { modifier = used_dragon_against_me who = ROOT years = 6 }
				troop_damage_by_dragon = yes
				character_event = { id = dragon.102 }
			}
		}
		add_character_modifier = { modifier = used_dragon_in_battle_siege_hidden duration = 970 }
		change_infamy = {
			value = 3
			localisation = dragon_infamy
		}
		character_event = { id = dragon.104 days = 1 }
	}
}

#	Use your dragon in siege
character_event = {
	id = dragon.101
	desc = EVTDESCdragon101
	picture = GFX_evt_battle_dragon_two
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes

	trigger = {
		use_dragon_in_siege_potential = yes
	}
	
	immediate = {
		ROOT = {
			any_friend = {
				limit = { is_tamed_dragon = yes }
				save_event_target_as = your_dragon
			}
		}
	}
	
	option = { #Let these stones be their graves
		name = EVTOPTAdragon101
		tooltip_info = dragon_rider
		
		ROOT = {
			any_friend = {
				limit = { is_tamed_dragon = yes }
				random = {
					chance = 20
					
					modifier = {
						factor = 0.9
						check_variable = { which = drastrvar value <= 20 } 
					}
					modifier = {
						factor = 0.9
						check_variable = { which = drastrvar value <= 25 } 
					}
					modifier = {
						factor = 0.9
						check_variable = { which = drastrvar value <= 30 } 
					}
					modifier = {
						factor = 0.9
						check_variable = { which = drastrvar value <= 35 } 
					}
					modifier = {
						factor = 0.9
						check_variable = { which = drastrvar value <= 40 } 
					}
					modifier = {
						factor = 0.9
						check_variable = { which = drastrvar value <= 45 } 
					}
					modifier = {
						factor = 0.9
						check_variable = { which = drastrvar value <= 50 } 
					}
					modifier = {
						factor = 0.9
						check_variable = { which = drastrvar value <= 55 } 
					}
					modifier = {
						factor = 0.9
						check_variable = { which = drastrvar value <= 60 } 
					}
					modifier = {
						factor = 0.9
						check_variable = { which = drastrvar value <= 65 } 
					}
				}
			}
		}	
		
		siege =  {
			enemy = {
				troop_damage_by_dragon = yes
			}
		}
		any_current_enemy = {
			any_courtier = {
			limit = { at_location = ROOT }
			opinion = { modifier = used_dragon_against_me who = ROOT years = 6 }
			character_event = { id = dragon.103 days = 1 }
			}
		}
		character_event = { id = dragon.104 days = 1 }
		add_character_modifier = { modifier = used_dragon_in_battle_siege_hidden duration = 970 }
		change_infamy = {
			value = 3
			localisation = dragon_infamy
		}
		character_event = { id = dragon.105 }
		
	}
}

#	Enemy gets wounded or dies in battle
character_event = {
	id = dragon.102
	desc = EVTDESCdragon102
	picture = GFX_evt_dragon_body_burned
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	trigger = {
		at_location = FROM
	}
	
	immediate = {
		random_list = {
			10 = {
			}
			30 = {	
				set_character_flag = wounded_by_dragon
			}
			15 = {
				set_character_flag = maimed_by_dragon
			}
			15 = {
				set_character_flag = severely_injured_by_dragon
			}
			30 = {
				set_character_flag = killed_by_dragon
			}
		}
	}
	
	option = {
		name= {
			text = EVTOPTAdragon102
			trigger = { has_character_flag = wounded_by_dragon }
		}
		name= {
			text = EVTOPTBdragon102
			trigger = { has_character_flag = maimed_by_dragon }
		}
		name= {
			text = EVTOPTCdragon102
			trigger = { has_character_flag = severely_injured_by_dragon }
		}
		name= {
			text = EVTOPTCdragon102
			trigger = { has_character_flag = killed_by_dragon }
		}
	}
}

#	Enemy gets wounded or dies in siege
character_event = {
	id = dragon.103
	desc = EVTDESCdragon103
	picture = GFX_evt_dragon_body_burned
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	#trigger = {
	#	at_location = FROM
	#}
	
	immediate = {
		name = EVTOPTAdragon103

		random_list = {
			10 = {
			}
			20 = {	
				set_character_flag = wounded_by_dragon
			}
			20 = {
				set_character_flag = maimed_by_dragon
			}
			20 = {
				set_character_flag = severely_injured_by_dragon
			}
			30 = {
				set_character_flag = killed_by_dragon
			}
		}
	}
	
	option = {
		name= {
			text = EVTOPTAdragon103
			trigger = { has_character_flag = wounded_by_dragon }
		}
		name= {
			text = EVTOPTBdragon103
			trigger = { has_character_flag = maimed_by_dragon }
		}
		name= {
			text = EVTOPTCdragon103
			trigger = { has_character_flag = severely_injured_by_dragon }
		}
		name= {
			text = EVTOPTCdragon103
			trigger = { has_character_flag = killed_by_dragon }
		}
	}
}

#	Dislpays wounded/maimed/severely injured and killed characters in battle/siege
character_event = {
	id = dragon.104
	desc = {
		trigger = {
			in_battle = yes
		}
		text = EVTDESCAdragon104
	}
	desc = {
		trigger = {
			in_siege = yes
		}
		text = EVTDESCBdragon104
	}
	picture = GFX_evt_dragon_spoils_of_war
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = EVTOPTAdragon104
		
		any_current_enemy = {
			any_realm_character = {
				if = { 
					limit = { has_character_flag = wounded_by_dragon }
					add_trait = wounded
					clr_character_flag = wounded_by_dragon
				}
				if = { 
					limit = { has_character_flag = maimed_by_dragon }
					add_trait = maimed
					clr_character_flag = maimed_by_dragon
				}
				if = { 
					limit = { has_character_flag = severely_injured_by_dragon }
					add_trait = severely_injured
					add_trait = disfigured_by_dragon
					clr_character_flag = severely_injured_by_dragon
				}
				if = { 
					limit = { has_character_flag = killed_by_dragon }
					death = { death_reason = death_dragon_fire1 killer = event_target:your_dragon }
					clr_character_flag = burnt_by_dragon
				}
			}
		}
	}
}

#	Destroy the enemy's fortification | dragon
character_event = {
	id = dragon.105
	desc = EVTDESCdragon105
	picture = GFX_evt_burning_city_andreas_rocha
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	# Burn the walls only
	option = {
		name = EVTOPTAdragon105
		tooltip_info = dragon_rider
		
		location = {
			random_province_holding = { 
				limit = { has_siege = yes }
				destroy_random_building = yes
				add_holding_modifier = { modifier = burnt_fortifications duration = 1095 }
			}
		}
	}
	
	# Burn the holding
	option = {
		name = EVTOPTBdragon105
		tooltip_info = dragon_rider
		
		location = {
			random_province_holding = { 
				limit = { has_siege = yes }
				destroy_random_building = yes
				destroy_random_building = yes
				add_holding_modifier = { modifier = devastated_fort duration = 2190 }
			}
		}
		add_character_modifier = { modifier = used_dragon_in_battle_siege_hidden duration = 970 }
		change_infamy = {
			value = 10
			localisation = dragon_infamy
		}
		prestige = -250
	}
	
	# Give them fire
	option = {
		name = EVTOPTCdragon105
		tooltip_info = dragon_rider
		
		location = {
			custom_tooltip = {
				text = TOOLTIP_DRAGON105
				random_province_holding = { 
					limit = { has_siege = yes }
					set_variable = { which = count value = 15 }
					while = {
						limit = { check_variable = { which = count value = 1 } }    
						subtract_variable = { which = count value = 1 }
						destroy_random_building = yes
					}
					opinion = { modifier = used_dragon_against_me who = ROOT years = 6 }
					add_holding_modifier = { modifier = destroyed_holding duration = 7300 }
				}
			}
		}
		add_character_modifier = { modifier = used_dragon_in_battle_siege_hidden duration = 970 }
		change_infamy = {
			value = 25
			localisation = dragon_infamy
		}
		prestige = -750
		add_trait = commited_mass_killing
	}
	
	# Let it go
	option = {
		name = EVTOPTDdragon105
	}
}

#	Enemy troops decide to join you
character_event = {
	id = dragon.106
	desc = EVTDESCdragon106
	picture = GFX_evt_enemy_troops_pledge_fealty
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = "Great!"
		
		custom_tooltip = {
			text = TOOLTIP_DRAGON106
			any_army = {
				troops = 0.09
			}	
		}
	}
}

#	Face the dragon
character_event = {
	id = dragon.200
	desc = EVTDESCdragon200
	picture = GFX_evt_battle_dragon_two
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = EVTOPTAdragon200
		tooltip_info = dragon_rider
		
		random_list = {
			50 = {
				# increased taming chance
				modifier = {
				factor = 1.5
				event_target:targetted_dragon_for_taming = { trait = dragon_wounded }
				}
				modifier = {
					factor = 2.1
					event_target:targetted_dragon_for_taming = { trait = dragon_maimed }
				}
				modifier = {
					factor = 1.2
					event_target:targetted_dragon_for_taming = { trait = dragon_slothful }
				}
				modifier = {
					factor = 2.5
					event_target:targetted_dragon_for_taming = { trait = dragon_humble }
				}
				modifier = {
					factor = 3
					event_target:targetted_dragon_for_taming = { trait = dragon_friendly }
				}
				#decreased
				modifier = {
					factor = 0.6
					event_target:targetted_dragon_for_taming = { trait = dragon_wroth }
				}
				modifier = {
					factor = 0.8
					event_target:targetted_dragon_for_taming = { trait = dragon_proud }
				}
				modifier = {
					factor = 0.4
					NOT = { culture_group = valyrian }
				}
				modifier = {
					factor = 5
					culture_group = valyrian
				}
				custom_tooltip = {
					text = TOOLTIP_DRAGON8_A
					event_target:targetted_dragon_for_taming = {
						add_friend = ROOT
					}
					character_event = { id = dragon.201 }
				}
			}
			50 = {
				custom_tooltip = {
					text = TOOLTIP_DRAGON200_B
					death = { death_reason = death_dragon_fire2 killer = event_target:targetted_dragon_for_taming }
				}
			}
		}
	}
}

#	Taming successful!
character_event = {
	id = dragon.201
	desc = EVTDESCdragon201
	picture = GFX_evt_battle_dragon_two
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = EVTOPTAdragon201
		
		add_trait = dragon_rider
		random_courtier = { give_minor_title = title_dragon_lord }
		change_infamy = {
			value = 10
			localisation = dragon_infamy
		}
		chronicle = { 
			entry = CHRONICLE_TAMED_DRAGON
			portrait = [targetted_dragon_for_taming.GetID]
		}
	}
}

#	Taming failed!
character_event = {
	id = dragon.202
	desc = EVTDESCdragon202
	picture = GFX_evt_battle_dragon_two
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = EVTOPTAdragon202
	}
}

#	You really want to hatch?
character_event = {
	id = dragon.203
	desc = EVTDESCdragon203 
	picture = GFX_evt_dragon_eggs_chest
	
	is_triggered_only = yes
	
	option = { 
		name = EVTOPTAdragon203
		
		character_event = { id = dragon.204 }
	}
	
	option = { 
		name = EVTOPTBdragon203
	}
}

#	Dragon egg hatched
character_event = {
	id = dragon.204
	desc = EVTDESCdragon204
	picture = GFX_evt_dragon_egg_in_fire
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	immediate = {
		random_artifact = {
			limit = { is_artifact_equipped = yes }
			original_artifact_owner = {
				save_event_target_as = dragon_parent
			}
		}
		create_character = {
			random_traits = no
			dynasty = NONE
			religion = dragon_religion
			culture = dragon_culture
			female = no
			age = 0
			historical = yes
		}
		new_character = {
			add_trait = dragon_trait
			add_trait = dragon_base_trait
			set_father = event_target:dragon_parent
			save_event_target_as = hatchling
			random_list = {
				1 = { add_trait = dragon1 }
				1 = { add_trait = dragon2 }
				1 = { add_trait = dragon3 }
				1 = { add_trait = dragon4 }
				1 = { add_trait = dragon5 }
				1 = { add_trait = dragon6 }
				1 = { add_trait = dragon7 }
				1 = { add_trait = dragon8 }
				1 = { add_trait = dragon9 }
				1 = { add_trait = dragon10 }
				1 = { add_trait = dragon11 }
				1 = { add_trait = dragon12 }
				1 = { add_trait = dragon13 }
				1 = { add_trait = dragon14 }
				1 = { add_trait = dragon15 }
			}
		}
		clear_event_target = dragon_parent
		hidden_tooltip = {
			random_artifact = {
				limit = { is_artifact_equipped = yes }
				if = {
					limit = { artifact_type = black_dragon_egg }
					artifact_owner = { destroy_artifact = black_dragon_egg }
				}
				if = {
					limit = { artifact_type = blue_dragon_egg }
					artifact_owner = { destroy_artifact = blue_dragon_egg }
				}
				if = {
					limit = { artifact_type = green_dragon_egg }
					artifact_owner = { destroy_artifact = green_dragon_egg }
				}
				if = {
					limit = { artifact_type = red_dragon_egg }
					artifact_owner = { destroy_artifact = red_dragon_egg }
				}
				if = {
					limit = { artifact_type = white_dragon_egg }
					artifact_owner = { destroy_artifact = white_dragon_egg }
				}
			}
		}
	}
	
	option = { 
		name = "Great!"
		
		change_infamy = {
			value = 2
			localisation = dragon_infamy
		}
		chronicle = { 
			entry = CHRONICLE_HATCHED_DRAGON
			portrait = [hatchling.GetID]
		}
	}
}

#	Black dragon egg transfered
character_event = {
	id = dragon.205
	desc = EVTDESCdragoneggtransferred
	picture = GFX_evt_black_dragon_egg_bg
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = "Great!"
		
		event_target:created_dragon_egg = {
			transfer_artifact = { from = FROM to = ROOT }
		}
		clear_event_target = created_dragon_egg
	}
}

#	Blue dragon egg transfered
character_event = {
	id = dragon.206
	desc = EVTDESCdragoneggtransferred
	picture = GFX_evt_blue_dragon_egg_bg
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = "Great!"
		
		event_target:created_dragon_egg = {
			transfer_artifact = { from = FROM to = ROOT }
		}
		clear_event_target = created_dragon_egg
	}
}

#	Green dragon egg transfered
character_event = {
	id = dragon.207
	desc = EVTDESCdragoneggtransferred
	picture = GFX_evt_green_dragon_egg_bg
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = "Great!"
		
		event_target:created_dragon_egg = {
			transfer_artifact = { from = FROM to = ROOT }
		}
		clear_event_target = created_dragon_egg
	}
}

#	Red dragon egg transfered
character_event = {
	id = dragon.208
	desc = EVTDESCdragoneggtransferred
	picture = GFX_evt_red_dragon_egg_bg
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = "Great!"
		
		event_target:created_dragon_egg = {
			transfer_artifact = { from = FROM to = ROOT }
		}
		clear_event_target = created_dragon_egg
	}
}

#	White dragon egg transfered
character_event = {
	id = dragon.209
	desc = EVTDESCdragoneggtransferred
	picture = GFX_evt_white_dragon_egg_bg
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = "Great!"
		
		event_target:created_dragon_egg = {
			transfer_artifact = { from = FROM to = ROOT }
		}
		clear_event_target = created_dragon_egg
	}
}


#tooltip = { show_portrait = yes }