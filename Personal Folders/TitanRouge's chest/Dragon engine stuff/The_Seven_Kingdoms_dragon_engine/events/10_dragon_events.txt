##########################
##### DRAGON ENGINE ######
## written by TtanRogue ##
##########################

####Basic dragon engine events 000-099 ####
#000	Initialize dragon stat calculation
#001	Sets dragon's status
#002	Simulates the dragon's growth
#003	Kills the dragon
#004	Decreases the infamy gained in sieges/battles when behaving peacufully
#005	Adds dragon egg to dragon to set dragon as FROM for renaming

####Dragon in combat events 100-199####
#100	Use your dragon battle
#101	Use your dragon in siege
#102	Enemy gets wounded or dies in battle
#103	Enemy gets wounded or dies in siege
#104	Dislpays wounded/maimed/severely injured and killed characters in battle/siege
#107	Fired on action to open won siege menu
#105	Destroy the enemy's fortification
#106	Enemy troops decide to join you
#108	Top liege is messaged of field of fire

####Dragon flavor events 200####
#200	Face the dragon
#201	Taming successful!
#202	Taming failed!
#203	You really want to hatch?
#204	Dragon egg hatched
#205	Dragon egg transfered

####Dragon duel events 300####

namespace = dragon

#	Initialize dragon stat calculation
character_event = {
	id = dragon.0

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_basic_dragon = yes
	}
	
	immediate = {
		# Dragon stat Calculation
		dragon_stat_calculation = yes
		repeat_event = { id = dragon.0 days = 31 }
		character_event = { id = dragon.1 days = 1 }
	}
}

#	Sets dragon's status
character_event = {
	id = dragon.1

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_basic_dragon = yes
	}
	
	immediate = {
		if = {
			limit = { 
				any_friend = { is_dragon_rider = yes }
			}
			set_character_flag = is_tamed_dragon
		}
		if = {
			limit = { 
				any_friend = { is_dragon_rider = no }
			}
			set_character_flag = is_wild_dragon
		}
	}
}

#	Simulates the dragon's growth
character_event = {
	id = dragon.2

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_basic_dragon = yes
	}
	
	immediate = {
		change_martial = 1
		random = {
			chance = 25
			modifier = {
				factor = 2
				trait = dragon_strong
			}
			change_martial = 1
		}
	}
}

#	Kills the dragon
character_event = {
	id = dragon.3

	#is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_basic_dragon = yes
		age = 110
	}
	
	mean_time_to_happen = { days = 1 }
	
	immediate = {
		random = {
			chance = 30
			modifier = {
				factor = 0
				age < 110
			}
			modifier = {
				factor = 1.2
				age <= 120
				NOT = { age <= 110 }
			}
			modifier = {
				factor = 1.4
				age <= 130
				NOT = { age <= 120 }
			}
			modifier = {
				factor = 1.6
				age <= 140
				NOT = { age <= 130 }
			}
			modifier = {
				factor = 1.8
				age <= 150
				NOT = { age <= 140 }
			}
			modifier = {
				factor = 2.2
				age <= 160
				NOT = { age <= 150 }
			}
			death = { death_reason = death_natural } 
		}
	}
}

#	Decreases the infamy gained in sieges/battles when behaving peacufully
character_event = {
	id = dragon.4

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_dragon_rider = yes
		NOT = { has_character_modifier = used_dragon_in_battle_siege_hidden }
	}
	
	immediate = {
		change_infamy = {
			value = -2
			localisation = dragon_infamy
		}
	}
}

#	Adds dragon egg to dragon to set dragon as FROM for renaming
character_event = {
	id = dragon.5
	
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_basic_dragon = yes
	}
	
	immediate = {
		random_list = {
			20 = {
				add_artifact = black_dragon_egg
				new_artifact = {
					save_event_target_as = created_dragon_egg
					set_name = "[From.GetFirstName]'s egg"
					set_artifact_original_owner = ROOT
				}
				if = {
					limit = { any_friend = { is_dragon_rider = yes } }
					random_friend = {
						character_event = { id = dragon.205 }
					}
				}
			}
			20 = {
				add_artifact = blue_dragon_egg
				new_artifact = {
					save_event_target_as = created_dragon_egg
					set_name = "[From.GetFirstName]'s egg"
					set_artifact_original_owner = ROOT
				}
				if = {
					limit = { any_friend = { is_dragon_rider = yes } }
					random_friend = {
						character_event = { id = dragon.205 }
					}
				}
			}
			20 = {
				add_artifact = green_dragon_egg
				new_artifact = {
					save_event_target_as = created_dragon_egg
					set_name = "[From.GetFirstName]'s egg"
					set_artifact_original_owner = ROOT
				}
				if = {
					limit = { any_friend = { is_dragon_rider = yes } }
					random_friend = {
						character_event = { id = dragon.205 }
					}
				}
			}
			20 = {
				add_artifact = red_dragon_egg
				new_artifact = {
					save_event_target_as = created_dragon_egg
					set_name = "[From.GetFirstName]'s egg"
					set_artifact_original_owner = ROOT
				}
				if = {
					limit = { any_friend = { is_dragon_rider = yes } }
					random_friend = {
						character_event = { id = dragon.205 }
					}
				}
			}
			20 = {
				add_artifact = white_dragon_egg
				new_artifact = {
					save_event_target_as = created_dragon_egg
					set_name = "[From.GetFirstName]'s egg"
					set_artifact_original_owner = ROOT
				}
				if = {
					limit = { any_friend = { is_dragon_rider = yes } }
					random_friend = {
						character_event = { id = dragon.205 }
					}
				}
			}
		}
	}
}

#	Use your dragon battle
character_event = {
	id = dragon.100
	desc = EVTDESCdragon100
	picture = GFX_evt_imad_awan_dragon_f_peright_final2
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	trigger = {
		use_dragon_in_battle_potential = yes
	}
	
	immediate = {
		set_your_dragon = yes #Be aware! ROOT must be the dragon's rider!
	}
	
	option = {	#Burn them all!
		name = EVTOPTAdragon100
		tooltip_info = dragon_rider
		
		any_current_enemy =  {
			top_liege = { character_event = { id = dragon.108 days = 4 } }
			any_realm_character = {
				limit = {
					in_command = yes
					prisoner = no
					NOT = { character = ROOT }
					is_dragon_rider = no
					at_location = ROOT
					#has_siege = no
				}
				character_event = { id = dragon.102 }
				opinion = { modifier = used_dragon_a_pergainst_me who = ROOT years = 6 }
				troop_damage_by_dragon = yes
			}
		}
		hidden_tooltip = {
			add_character_modifier = { modifier = used_dragon_in_battle_siege_hidden duration = 970 }
		}
		change_infamy = {
			value = 3
			localisation = dragon_infamy
		}
	}
}

#	Use your dragon in siege
character_event = {
	id = dragon.101
	desc = EVTDESCdragon101
	picture = GFX_evt_battle_dragon_two
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes

	trigger = {
		use_dragon_in_siege_potential = yes
	}
	
	immediate = {
		set_your_dragon = yes #Be aware! ROOT must be the dragon's rider!
	}
	
	option = { #Let these stones be their graves
		name = EVTOPTAdragon101
		tooltip_info = dragon_rider	
		
		siege =  {
			enemy = {
				troop_damage_by_dragon = yes
			}
		}
		any_current_enemy = {
			top_liege = { character_event = { id = dragon.108 days = 4 } }
			any_courtier = {
				limit = { at_location = ROOT }
				opinion = { modifier = used_dragon_a_pergainst_me who = ROOT years = 6 }
				random = {
					chance = 50
					character_event = { id = dragon.103 }
				}
			}
		}
		location = {
			random_province_holding = { 
				limit = { 
					has_siege = yes 
					ROOT = { siege = { is_attacker = yes } }
				}
				add_holding_modifier = { modifier = damaged_walls duration = 730 }
				holder = { 
					opinion = { modifier = used_dragon_a_pergainst_me who = ROOT years = 6 } 
				}
			}
		}
		hidden_tooltip = {
			add_character_modifier = { modifier = used_dragon_in_battle_siege_hidden duration = 970 }
		}
		change_infamy = {
			value = 3
			localisation = dragon_infamy
		}
	}
}

#	Enemy gets wounded or dies in battle
character_event = {
	id = dragon.102
	desc = EVTDESCdragon102
	picture = GFX_evt_battle_dragon
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	trigger = {
		at_location = FROMFROM
	}
	
	immediate = {
		random_list = {
			10 = {
			}
			30 = {	
				set_character_flag = wounded_by_dragon
			}
			15 = {
				set_character_flag = maimed_by_dragon
			}
			15 = {
				set_character_flag = severely_injured_by_dragon
			}
			30 = {
				set_character_flag = killed_by_dragon
			}
		}
	}
	
	option = {
		name = EVTOPTAdragon102
		prestige = 400
		if = {
			limit = { 
				OR = { 
					has_character_flag = wounded_by_dragon
					has_character_flag = maimed_by_dragon
					has_character_flag = severely_injured_by_dragon
					has_character_flag = killed_by_dragon
				}
			}
			FROMFROM = { character_event = { id = dragon.104 } }
		}
	}
}

#	Enemy gets wounded or dies in siege
character_event = {
	id = dragon.103
	desc = EVTDESCdragon103
	picture = GFX_evt_battle_dragon

	is_triggered_only = yes
	
	#trigger = {
	#	at_location = FROM
	#}
	
	immediate = {
		name = EVTOPTAdragon103

		random_list = {
			10 = {
			}
			20 = {	
				set_character_flag = wounded_by_dragon
			}
			20 = {
				set_character_flag = maimed_by_dragon
			}
			20 = {
				set_character_flag = severely_injured_by_dragon
			}
			30 = {
				set_character_flag = killed_by_dragon
			}
		}
	}
	
	option = {
		name= {
			text = EVTOPTAdragon103
			trigger = { has_character_flag = wounded_by_dragon }
		}
		name= {
			text = EVTOPTBdragon103
			trigger = { has_character_flag = maimed_by_dragon }
		}
		name= {
			text = EVTOPTCdragon103
			trigger = { has_character_flag = severely_injured_by_dragon }
		}
		name= {
			text = EVTOPTCdragon103
			trigger = { has_character_flag = killed_by_dragon }
		}
		
		if = {
			limit = { 
				OR = { 
					has_character_flag = wounded_by_dragon
					has_character_flag = maimed_by_dragon
					has_character_flag = severely_injured_by_dragon
					has_character_flag = killed_by_dragon
				}
			}
			FROMFROM = { character_event = { id = dragon.104 } }
		}
	}
}

#	Dislpays wounded/maimed/severely injured and killed characters in battle/siege
character_event = {
	id = dragon.104
	desc = {
		trigger = {
			in_battle = yes
		}
		text = EVTDESCAdragon104
	}
	desc = {
		trigger = {
			in_siege = yes
		}
		text = EVTDESCBdragon104
	}
	picture = GFX_evt_dragon_spoils_of_war
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = EVTOPTAdragon104
		
		FROM = {
			if = { 
				limit = { has_character_flag = wounded_by_dragon }
				add_trait = wounded
				clr_character_flag = wounded_by_dragon
			}
			if = { 
				limit = { has_character_flag = maimed_by_dragon }
				add_trait = maimed
				clr_character_flag = maimed_by_dragon
			}
			if = { 
				limit = { has_character_flag = severely_injured_by_dragon }
				add_trait = severely_injured
				add_trait = disfigured_by_dragon
				clr_character_flag = severely_injured_by_dragon
			}
			if = { 
				limit = { has_character_flag = killed_by_dragon }
				death = { death_reason = death_dragon_f_perire1 killer = event_target:your_dragon }
				clr_character_flag = burnt_by_dragon
			}
		}
	}
}

#	Enemy troops decide to join you | FROM is the won barony and ROOT the siege leader
character_event = {
	id = dragon.107

	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		character_event = { id = dragon.105 }
		#FROM = { save_event_target_as = won_barony } Doesn't work for some reason
	}
}

#	Destroy the enemy's fortification | dragon
character_event = {
	id = dragon.105
	desc = EVTDESCdragon105
	picture = GFX_evt_burning_city_andreas_rocha
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	trigger = {
		is_dragon_rider = yes
		NOT = { 
			location = {
				random_province_holding = { 
					limit = { controlled_by = ROOT }
					has_holding_modifier = destroyed_holding
				}
			}
		}
	}
	
	immediate = {
		set_your_dragon = yes #Be aware! ROOT must be the dragon's rider!
	}
	
	# Burn the walls only
	option = {
		name = EVTOPTAdragon105
		tooltip_info = dragon_rider
		
		ai_chance = {
			factor = 30
			modifier = {
				factor = 2
				OR = {
					trait = kind
					#trait = honorable
				}
			}
			modifier = {
				factor = 0.2
				OR = {
					trait = cruel
				}
			}
		}
		
		location = {
			random_province_holding = { 
				limit = { controlled_by = ROOT }
				destroy_random_building = yes
				add_holding_modifier = { modifier = burnt_fortifications duration = 1095 }
			}
		}
	}
	
	# Burn the fort
	option = {
		name = EVTOPTBdragon105
		tooltip_info = dragon_rider
		
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				OR = {
					trait = wroth
				}
			}
			modifier = {
				factor = 0.6
				OR = {
					trait = kind
				}
			}
		}
		
		location = {
			random_province_holding = { 
				limit = { controlled_by = ROOT }
				destroy_random_building = yes
				destroy_random_building = yes
				add_holding_modifier = { modifier = devastated_fort duration = 2190 }
			}
		}
		add_character_modifier = { modifier = used_dragon_in_battle_siege_hidden duration = 970 }
		change_infamy = {
			value = 10
			localisation = dragon_infamy
		}
		prestige = -250
	}
	
	# Give them fire
	option = {
		name = EVTOPTCdragon105
		tooltip_info = dragon_rider
		
		ai_chance = {
			factor = 10
			modifier = {
				factor = 2
				OR = {
					trait = cruel
					trait = commited_mass_killing
					trait = dishonorable
				}
			}
			modifier = {
				factor = 0.2
				OR = {
					trait = kind
				}
			}
		}
		
		custom_tooltip = {
			text = TOOLTIP_DRAGON105
			location = {
				set_province_flag = destroyed_holding
				random_province_holding = { 
					limit = { controlled_by = ROOT }
					set_variable = { which = count value = 15 }
					while = {
						limit = { check_variable = { which = count value = 1 } }    
						subtract_variable = { which = count value = 1 }
						destroy_random_building = yes
					}
				}
				random_province = {
					set_province_flag = destroyed_holding
				}
			}
		}
		location = {
			random_province_holding = { 
				limit = { controlled_by = ROOT }
				add_holding_modifier = { modifier = destroyed_holding duration = 7300 }
				holder = { 
					opinion = { modifier = used_dragon_a_pergainst_me who = ROOT years = 6 } 
				}
			}
		}
		add_character_modifier = { modifier = used_dragon_in_battle_siege_hidden duration = 970 }
		change_infamy = {
			value = 30
			localisation = dragon_infamy
		}
		prestige = -1000
		if = {
			limit = { NOT = { has_trait = commited_mass_killing } }
			add_trait = commited_mass_killing
		}
		if = {
			limit = { NOT = { has_trait = cruel } }
			add_trait = cruel
		}
	}
	
	# Let it go
	option = {
		name = EVTOPTDdragon105
		
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				OR = {
					trait = honorable
					trait = kind
				}
			}
			modifier = {
				factor = 0.2
				OR = {
					trait = cruel
					trait = wroth
					trait = commited_mass_killing
				}
			}
		}
	}
}

#	Enemy troops decide to join you
character_event = {
	id = dragon.106
	desc = EVTDESCdragon106
	picture = GFX_evt_enemy_troops_pledge_fealty
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = "Great!"
		
		custom_tooltip = {
			text = TOOLTIP_DRAGON106
			any_army = {
				troops = 0.15
			}	
		}
	}
}

#	Top liege is messaged of field of fire
character_event = {
	id = dragon.108
	desc = EVTDESCdragon108
	#picture = 
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	immediate  = {
		FROM = {
			set_your_dragon = yes
			
		}
	}
	
	option = {
		name = EVTOPTAdragon108
	}
}

#	Face the dragon
character_event = {
	id = dragon.200
	desc = EVTDESCdragon200
	picture = GFX_evt_battle_dragon_two
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = EVTOPTAdragon200
		tooltip_info = dragon_rider
		
		random_list = {
			50 = {
				# increased taming chance
				modifier = {
					factor = 1.5
					event_target:targetted_dragon_f_peror_taming = { trait = dragon_wounded }
				}
				modifier = {
					factor = 2.1
					event_target:targetted_dragon_f_peror_taming = { trait = dragon_maimed }
				}
				modifier = {
					factor = 1.2
					event_target:targetted_dragon_f_peror_taming = { trait = dragon_slothful }
				}
				modifier = {
					factor = 2.5
					event_target:targetted_dragon_f_peror_taming = { trait = dragon_humble }
				}
				modifier = {
					factor = 3
					event_target:targetted_dragon_f_peror_taming = { trait = dragon_f_perriendly }
				}
				#decreased
				modifier = {
					factor = 0.6
					event_target:targetted_dragon_f_peror_taming = { trait = dragon_wroth }
				}
				modifier = {
					factor = 0.8
					event_target:targetted_dragon_f_peror_taming = { trait = dragon_proud }
				}
				modifier = {
					factor = 0.4
					NOT = { culture_group = valyrian }
				}
				modifier = {
					factor = 5
					culture_group = valyrian
				}
				custom_tooltip = {
					text = TOOLTIP_DRAGON8_A
					event_target:targetted_dragon_f_peror_taming = {
						add_friend = ROOT
					}
					character_event = { id = dragon.201 }
				}
			}
			50 = {
				custom_tooltip = {
					text = TOOLTIP_DRAGON200_B
					death = { death_reason = death_dragon_f_perire2 killer = event_target:targetted_dragon_f_peror_taming }
				}
			}
		}
	}
}

#	Taming successful!
character_event = {
	id = dragon.201
	desc = EVTDESCdragon201
	picture = GFX_evt_battle_dragon_two
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = EVTOPTAdragon201
		
		add_trait = dragon_rider
		random_courtier = { give_minor_title = title_dragon_lord }
		change_infamy = {
			value = 10
			localisation = dragon_infamy
		}
		chronicle = { 
			entry = CHRONICLE_TAMED_DRAGON
			portrait = [targetted_dragon_f_peror_taming.GetID]
		}
	}
}

#	Taming failed!
character_event = {
	id = dragon.202
	desc = EVTDESCdragon202
	picture = GFX_evt_battle_dragon_two
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	option = {
		name = EVTOPTAdragon202
	}
}

#	You really want to hatch?
character_event = {
	id = dragon.203
	desc = EVTDESCdragon203 
	picture = GFX_evt_dragon_eggs_chest
	
	desc = { #	Black dragon egg
		trigger = { event_target:targetted_egg = { artifact_type = black_dragon_egg } }
		text = EVTDESCdragon203 
		picture = GFX_evt_blue_dragon_egg_bg	
	}
	desc = { #	Blue dragon egg
		trigger = { event_target:targetted_egg = { artifact_type = blue_dragon_egg } }
		text = EVTDESCdragon203 
		picture = GFX_evt_black_dragon_egg_bg	
	}
	desc = { #	Green dragon egg
		trigger = { event_target:targetted_egg = { artifact_type = green_dragon_egg } }
		text = EVTDESCdragon203 
		picture = GFX_evt_green_dragon_egg_bg	
	}
	desc = { #	Red dragon egg
		trigger = { event_target:targetted_egg = { artifact_type = red_dragon_egg } }
		text = EVTDESCdragon203 
		picture = GFX_evt_red_dragon_egg_bg	
	}
	desc = { #	White dragon egg
		trigger = { event_target:targetted_egg = { artifact_type = white_dragon_egg } }
		text = EVTDESCdragon203 
		picture = GFX_evt_white_dragon_egg_bg	
	}
	
	is_triggered_only = yes
	
	option = { 
		name = EVTOPTAdragon203
		
		character_event = { id = dragon.204 }
	}
	
	option = { 
		name = EVTOPTBdragon203
	}
}

#	Dragon egg hatched
character_event = {
	id = dragon.204
	desc = EVTDESCdragon204
	picture = GFX_evt_dragon_egg_in_fire
	#border = GFX_event_normal_frame_martial

	is_triggered_only = yes
	
	immediate = {
		random_artifact = {
			limit = { is_artifact_equipped = yes }
			set_artifact_flag = targetted_dragon_egg #Added for ambition
			original_artifact_owner = {
				save_event_target_as = dragon_parent
			}
		}
		create_character = {
			random_traits = no
			dynasty = NONE
			religion = dragon_religion
			culture = dragon_culture
			female = no
			age = 0
			historical = yes
		}
		new_character = {
			add_trait = dragon_trait
			add_trait = dragon_base_trait
			set_father = event_target:dragon_parent
			save_event_target_as = hatchling
			random_list = {
				1 = { add_trait = dragon1 }
				1 = { add_trait = dragon2 }
				1 = { add_trait = dragon3 }
				1 = { add_trait = dragon4 }
				1 = { add_trait = dragon5 }
				1 = { add_trait = dragon6 }
				1 = { add_trait = dragon7 }
				1 = { add_trait = dragon8 }
				1 = { add_trait = dragon9 }
				1 = { add_trait = dragon10 }
				1 = { add_trait = dragon11 }
				1 = { add_trait = dragon12 }
				1 = { add_trait = dragon13 }
				1 = { add_trait = dragon14 }
				1 = { add_trait = dragon15 }
			}
		}
		clear_event_target = dragon_parent
		hidden_tooltip = {
			random_artifact = {
				limit = { is_artifact_equipped = yes }
				clr_artifact_flag = targetted_dragon_egg #Added for ambition
				if = {
					limit = { artifact_type = black_dragon_egg }
					artifact_owner = { destroy_artifact = black_dragon_egg }
				}
				if = {
					limit = { artifact_type = blue_dragon_egg }
					artifact_owner = { destroy_artifact = blue_dragon_egg }
				}
				if = {
					limit = { artifact_type = green_dragon_egg }
					artifact_owner = { destroy_artifact = green_dragon_egg }
				}
				if = {
					limit = { artifact_type = red_dragon_egg }
					artifact_owner = { destroy_artifact = red_dragon_egg }
				}
				if = {
					limit = { artifact_type = white_dragon_egg }
					artifact_owner = { destroy_artifact = white_dragon_egg }
				}
			}
		}
	}
	
	option = { 
		name = "Great!"
		
		change_infamy = {
			value = 2
			localisation = dragon_infamy
		}
		chronicle = { 
			entry = CHRONICLE_HATCHED_DRAGON
			portrait = [hatchling.GetID]
		}
	}
}

#	Dragon egg transfered
character_event = {
	id = dragon.205
	desc = EVTDESCdragoneggtransferred
	picture = GFX_evt_white_dragon_egg_bg
	
	desc = { #	Black dragon egg
		trigger = { event_target:created_dragon_egg = { artifact_type = black_dragon_egg } }
		text = EVTDESCdragoneggtransferred
		picture = GFX_evt_blue_dragon_egg_bg	
	}
	desc = { #	Blue dragon egg
		trigger = { event_target:created_dragon_egg = { artifact_type = blue_dragon_egg } }
		text = EVTDESCdragoneggtransferred
		picture = GFX_evt_black_dragon_egg_bg	
	}
	desc = { #	Green dragon egg
		trigger = { event_target:created_dragon_egg = { artifact_type = green_dragon_egg } }
		text = EVTDESCdragoneggtransferred
		picture = GFX_evt_green_dragon_egg_bg	
	}
	desc = { #	Red dragon egg
		trigger = { event_target:created_dragon_egg = { artifact_type = red_dragon_egg } }
		text = EVTDESCdragoneggtransferred
		picture = GFX_evt_red_dragon_egg_bg	
	}
	desc = { #	White dragon egg
		trigger = { event_target:created_dragon_egg = { artifact_type = white_dragon_egg } }
		text = EVTDESCdragoneggtransferred
		picture = GFX_evt_white_dragon_egg_bg	
	}
	is_triggered_only = yes
	
	option = {
		name = "Great!"
		
		event_target:created_dragon_egg = {
			transfer_artifact = { from = FROM to = ROOT }
		}
		clear_event_target = created_dragon_egg
	}
}

#tooltip = { show_portrait = yes }

##############
#DRAGON DUELS#
##############

#Find dragon riders | max. 6 | Team A is a, b, c  Team B is d, e, f 
#FROM is the enemy commander but it doesn't scope correctly so it is unused,
character_event = {
	id = dragon.300
	
	desc = "DEBUG"
	
	is_triggered_only = yes
	
	#hide_window = yes
	
	major = yes
	
	trigger = {
		in_battle = yes
		in_command = yes
		is_dragon_rider = yes
		NOT = { has_character_modifier = in_dragon_d_peruel }
	}
	
	immediate = {
		
		#### TEAM A ####
		
		# Rider a is set in the decision
		
		# Set rider b
		random_character = {
			limit = {
				at_location = ROOT
				in_command = yes
				is_dragon_rider = yes
				NOT = { war_with = ROOT }
				NOR = {
					has_character_flag = debug_rider_a
					has_character_flag = debug_rider_b
					has_character_flag = debug_rider_c
					has_character_flag = debug_rider_d
					has_character_flag = debug_rider_e
					has_character_flag = debug_rider_f
				}
			}
			set_character_flag = debug_rider_b
			event_target:rider_a = {
				set_character_flag = rider_b_chosen
			}
			save_event_target_as = rider_b
			save_persistent_event_target = { name = rider_b_per scope = event_target:rider_b }
			any_friend = {
				limit = {
					is_tamed_dragon = yes
				}
				dragon_stat_calculation = yes
				set_variable = { which = global_dragon_strenght_var_b which = dragon_strenght_var }
				set_character_flag = debug_dragon_b
				save_event_target_as = dragon_b
				save_persistent_event_target = { name = dragon_b_per scope = event_target:dragon_b }
			}
		}
		# Set rider c
		random_character = {
			limit = {
				at_location = ROOT
				in_command = yes
				is_dragon_rider = yes
				NOT = { war_with = ROOT }
				NOR = {
					has_character_flag = debug_rider_a
					has_character_flag = debug_rider_b
					has_character_flag = debug_rider_c
					has_character_flag = debug_rider_d
					has_character_flag = debug_rider_e
					has_character_flag = debug_rider_f
				}
			}
			set_character_flag = debug_rider_c
			event_target:rider_a = {
				set_character_flag = rider_c_chosen
			}
			save_event_target_as = rider_c
			save_persistent_event_target = { name = rider_c_per scope = event_target:rider_c }
			any_friend = {
				limit = {
					is_tamed_dragon = yes
				}
				dragon_stat_calculation = yes
				set_variable = { which = global_dragon_strenght_var_c which = dragon_strenght_var }
				set_character_flag = debug_dragon_c
				save_event_target_as = dragon_c
				save_persistent_event_target = { name = dragon_c_per scope = event_target:dragon_c }
			}
		}
		
		#### TEAM B ####
		
		# Set rider d
		random_character = {
			limit = {
				at_location = ROOT
				in_command = yes
				is_dragon_rider = yes
				war_with = ROOT
				NOR = {
					has_character_flag = debug_rider_a
					has_character_flag = debug_rider_b
					has_character_flag = debug_rider_c
					has_character_flag = debug_rider_d
					has_character_flag = debug_rider_e
					has_character_flag = debug_rider_f
				}
			}
			set_character_flag = debug_rider_d
			save_event_target_as = rider_d
			save_persistent_event_target = { name = rider_d_per scope = event_target:rider_d }
			any_friend = {
				limit = {
					is_tamed_dragon = yes
				}
				dragon_stat_calculation = yes
				set_variable = { which = global_dragon_strenght_var_d which = dragon_strenght_var }
				set_character_flag = debug_dragon_d
				save_event_target_as = dragon_d
				save_persistent_event_target = { name = dragon_d_per scope = event_target:dragon_d }
			}
		}
		
		# Set rider e
		random_character = {
			limit = {
				at_location = ROOT
				in_command = yes
				is_dragon_rider = yes
				war_with = ROOT
				NOR = {
					has_character_flag = debug_rider_a
					has_character_flag = debug_rider_b
					has_character_flag = debug_rider_c
					has_character_flag = debug_rider_d
					has_character_flag = debug_rider_e
					has_character_flag = debug_rider_f
				}
			}
			set_character_flag = debug_rider_e
			event_target:rider_d = {
				set_character_flag = rider_e_chosen
			}
			save_event_target_as = rider_e
			save_persistent_event_target = { name = rider_e_per scope = event_target:rider_e }
			any_friend = {
				limit = {
					is_tamed_dragon = yes
				}
				dragon_stat_calculation = yes
				set_variable = { which = global_dragon_strenght_var_e which = dragon_strenght_var }
				set_character_flag = debug_dragon_e
				save_event_target_as = dragon_e
				save_persistent_event_target = { name = dragon_e_per scope = event_target:dragon_e }
			}
		}
		
		# Set rider f
		random_character = {
			limit = {
				at_location = ROOT
				in_command = yes
				is_dragon_rider = yes
				war_with = ROOT
				NOR = {
					has_character_flag = debug_rider_a
					has_character_flag = debug_rider_b
					has_character_flag = debug_rider_c
					has_character_flag = debug_rider_d
					has_character_flag = debug_rider_e
					has_character_flag = debug_rider_f
				}
			}
			set_character_flag = debug_rider_f
			event_target:rider_d = {
				set_character_flag = rider_f_chosen
			}
			save_event_target_as = rider_f
			save_persistent_event_target = { name = rider_f_per scope = event_target:rider_f }
			any_friend = {
				limit = {
					is_tamed_dragon = yes
				}
				dragon_stat_calculation = yes
				set_variable = { which = global_dragon_strenght_var_f which = dragon_strenght_var }
				set_character_flag = debug_dragon_f
				save_event_target_as = dragon_f
				save_persistent_event_target = { name = dragon_f_per scope = event_target:dragon_f }
			}
		}
		
		#If there is no other rider in team A
		if = {
			limit = {
				NAND = {
					has_character_flag = rider_b_chosen
					has_character_flag = rider_c_chosen
				}
				event_target:rider_d = {
					OR = {
						has_character_flag = rider_e_chosen
						has_character_flag = rider_f_chosen
					}
				}
			}
			set_character_flag = rider_a_stands_alone
		}
		
		#If there is no other rider in team B
		else_if = {
			limit = {
				OR = {
					has_character_flag = rider_b_chosen
					has_character_flag = rider_c_chosen
				}
				event_target:rider_d = {
					NAND = {
						has_character_flag = rider_e_chosen
						has_character_flag = rider_f_chosen
					}
				}
			}
			set_character_flag = rider_d_stands_alone
		}
		#If there are only 2 riders
		else_if = {
			limit = {
				NAND = {
					has_character_flag = rider_b_chosen
					has_character_flag = rider_c_chosen
				}
				event_target:rider_d = {
					NAND = {
						has_character_flag = rider_e_chosen
						has_character_flag = rider_f_chosen
					}
				}
			}
			set_character_flag = 2_riders_duel
		}
		
		event_target:rider_d = { character_event = { id = dragon.301 } }
		
		#clr_global_flag = possible_dragon_d_peruel
	}
	
	option = {
		name = "Riders: A:[rider_a.GetID], B:[rider_b.GetID], C:[rider_c.GetID], D:[rider_d.GetID], E:[rider_e.GetID], F:[rider_f.GetID]"
		
		event_target:rider_a = { tooltip = { show_portrait = yes } }
		event_target:rider_b = { tooltip = { show_portrait = yes } }
		event_target:rider_c = { tooltip = { show_portrait = yes } }
		event_target:rider_d = { tooltip = { show_portrait = yes } }
		event_target:rider_e = { tooltip = { show_portrait = yes } }
		event_target:rider_f = { tooltip = { show_portrait = yes } }
	}
}

#Rider D is notified about rider A's attack
character_event = {
	id = dragon.301
	desc = EVTDESCdragon301
	
	#major = yes
	
	is_triggered_only = yes
	
	immediate = {
		
	}
	
	option = {
		name = "I will defend my army and destroy the enemy"
		
		#Calculate duel team B's dragon strenght
		if = {
			limit = {
				has_character_flag = debug_rider_d
			}
			set_variable = { which = dragon_strength_team_b which = global_dragon_strenght_var_d }
			set_variable = { which = global_dragon_strength_team_b which = dragon_strength_team_b }
		}
		
		#Rider A is notified about Rider D engaging the duel
		event_target:rider_a = { character_event = { id = dragon.302 } }
		
		#Ask allied riders to join you
		event_target:rider_e = { character_event = { id = dragon.303 } }
		event_target:rider_f = { character_event = { id = dragon.303 } }
	}
	
	option = {
		name = "Flee"
	
		trigger = {
			always = no
		}
	}
}

#Rider A spots Rider D in the air
character_event = {
	id = dragon.302
	desc = EVTDESCdragon302
	
	is_triggered_only = yes
	
	immediate = {
		
	}
	
	option = {
		name = "What a fool. He is as good as dead!"
		
		#Calculate duel team A's dragon strenght
		if = {
			limit = {
				has_character_flag = debug_rider_a
			}
			set_variable = { which = dragon_strength_team_a which = global_dragon_strenght_var_a }
			change_variable = { which = dragon_strength_team_a which = global_dragon_strenght_var_b }
			change_variable = { which = dragon_strength_team_a which = global_dragon_strenght_var_c }
			set_variable = { which = global_dragon_strength_team_a which = dragon_strength_team_a }
		}
		
		#Ask allied riders to join you
		if = { #If there are non...
			limit = {
				OR = {
					has_character_flag = 2_riders_duel
					has_character_flag = rider_a_stands_alone
				}
			}
			event_target:rider_d = { character_event = { id = dragon.305 } }
		}
		else = {
			event_target:rider_b = { character_event = { id = dragon.303 } }
			event_target:rider_c = { character_event = { id = dragon.303 } }
		}
	}
	
	option = {
		name = "Flee"
	
		trigger = {
			always = no
		}
		
		if = {
			limit = {
				has_minor_title = title_commander
			}
			remove_title = title_commander
		}
	}
}

#Riders are asked whether or not to join the duel
letter_event = {
	id = dragon.303
	desc = EVTDESCdragon303
	
	is_triggered_only = yes
	
	trigger = {
		NOR = {
			has_character_flag = debug_rider_a
			has_character_flag = debug_rider_d
		}
	}
	
	immediate = {
		
	}
	
	option = {
		name = "I will fight!"
		
		if = {
			limit = {
				OR = {
					has_character_flag = debug_rider_b
					has_character_flag = debug_rider_c
				}
			}
			event_target:rider_a = { character_event = { id = dragon.304 } }
		}
		
		if = {
			limit = {
				OR = {
					has_character_flag = debug_rider_e
					has_character_flag = debug_rider_f
				}
			}
			event_target:rider_d = { character_event = { id = dragon.304 } }
		}
	}
	
	option = {
		name = "Flee"
	
		trigger = {
			always = no
		}
		
		if = {
			limit = {
				has_minor_title = title_commander
			}
			remove_title = title_commander
		}
		clr_character_flag = debug_rider_b
		clr_character_flag = debug_rider_c
		clr_character_flag = debug_rider_e
		clr_character_flag = debug_rider_f
	}
}

#Rider A and D are notified about the riders who join on their side
letter_event = {
	id = dragon.304
	desc = EVTDESCdragon304
	
	is_triggered_only = yes
	
	immediate = {
		
	}
	
	option = {
		name = "Together we will defeat the enemy!"
		
		#Calculate duel team A's dragon strenght
		if = {
			limit = {
				has_character_flag = debug_rider_a
			}
			set_variable = { which = dragon_strength_team_a which = global_dragon_strenght_var_a }
			#If FROM is rider B
			if = {
				limit = {
					FROM = { has_character_flag = debug_rider_b }
				}
				change_variable = { which = dragon_strength_team_a which = global_dragon_strenght_var_b }
			}
			#If FROM is rider C
			if = {
				limit = {
					FROM = { has_character_flag = debug_rider_c }
				}
				change_variable = { which = dragon_strength_team_a which = global_dragon_strenght_var_c }
			}
			set_variable = { which = global_dragon_strength_team_a which = dragon_strength_team_a }
		}
		
		#Calculate duel team B's dragon strenght
		if = {
			limit = {
				has_character_flag = debug_rider_d
			}
			set_variable = { which = dragon_strength_team_d which = global_dragon_strenght_var_d }
			#If FROM is rider E
			if = {
				limit = {
					FROM = { has_character_flag = debug_rider_e }
				}
				change_variable = { which = dragon_strength_team_b which = global_dragon_strenght_var_e }
			}
			#If FROM is rider F
			if = {
				limit = {
					FROM = { has_character_flag = debug_rider_f }
				}
				change_variable = { which = dragon_strength_team_b which = global_dragon_strenght_var_f }
			}
			set_variable = { which = global_dragon_strength_team_b which = dragon_strength_team_b }
		}
		
		# To avoid duplicate outcome event
		if = {
			limit = {
				has_character_flag = debug_rider_a
				FROM = { has_character_flag = debug_rider_b }
			}
			event_target:rider_d = { character_event = { id = dragon.305 } }
		}
	}
	
	option = {
		name = "Flee"
	
		trigger = {
			always = no
		}
	}
}

#Simple ping event
character_event = {
	id = dragon.305
	
	is_triggered_only = yes
	
	hide_window = yes
	
	immediate = {
		event_target:rider_a = { character_event = { id = dragon.306 } }
	}
	
	option = {
	
	}
}

#Calculates Outcome
character_event = {
	id = dragon.306
	desc = "Tema A: [global_dragon_strength_team_a.GetValue]| Team B: [global_dragon_strength_team_b.GetValue]"
	
	is_triggered_only = yes
	
	major = yes
	
	major_trigger = {
		OR = {
			has_character_flag = debug_rider_a
			has_character_flag = debug_rider_b
			has_character_flag = debug_rider_c
			has_character_flag = debug_rider_d
			has_character_flag = debug_rider_e
			has_character_flag = debug_rider_f
		}
	}
	
	immediate = {
		
	}
	
	option = {
		name = "NONE"
		
		
		
		event_target:rider_a = { tooltip = { show_portrait = yes } }
		event_target:dragon_a = { tooltip = { show_portrait = yes } }
		event_target:rider_b = { tooltip = { show_portrait = yes } }
		event_target:dragon_b = { tooltip = { show_portrait = yes } }
		event_target:rider_c = { tooltip = { show_portrait = yes } }
		event_target:dragon_c = { tooltip = { show_portrait = yes } }
		event_target:rider_d = { tooltip = { show_portrait = yes } }
		event_target:dragon_d = { tooltip = { show_portrait = yes } }
		event_target:rider_e = { tooltip = { show_portrait = yes } }
		event_target:dragon_e = { tooltip = { show_portrait = yes } }
		event_target:rider_f = { tooltip = { show_portrait = yes } }
		event_target:dragon_f = { tooltip = { show_portrait = yes } }
		
		if = {
			limit = {
				check_variable = { which = global_dragon_strength_team_a which = global_dragon_strength_team_b }
			}
			wealth = 10
		}
		else = {
			prestige = 10
		}
	}
	
	option = {
		name = "Flee"
	
		trigger = {
			always = no
		}
	}
}

#
character_event = {
	id = dragon.999
	
	is_triggered_only = yes
	
	immediate = {
		
	}
	
	option = {
	
	}
}